{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/Containers/Panel/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../../Actions';\nimport withAuth from 'hoc/WithAuth';\nimport { isValidToken } from 'tools';\nimport Loader from 'components/UI/Loader';\nimport Navigation from 'containers/Navigation';\nimport PanelIntro from 'containers/Panel/Intro';\nimport PageNotFound from 'components/PageNotFound';\nimport Accounts from 'containers/Accounts';\nimport Transfers from 'containers/Transfers';\nimport Cards from 'containers/Cards';\nimport Profile from 'containers/Profile';\nimport ProfileChangeDetails from 'containers/Profile/ChangeDetails';\nimport Messages from 'containers/Messages'; // Get all user's initial data or redirect back to /login if not logged in\n// This is all handled in withAuth HOC\n\nclass Panel extends Component {\n  componentDidMount() {\n    isValidToken().then(() => {\n      this.props.setAuthStatus(true);\n      this.props.fetchInitialData();\n    }).catch(() => {\n      this.props.setAuthStatus(false);\n    });\n  }\n\n  render() {\n    if (!this.props.initialDataStatus) {\n      return React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/panel\",\n        component: Navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/panel\",\n        component: PanelIntro,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/panel/accounts\",\n        component: Accounts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/panel/transfers\",\n        component: Transfers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/panel/cards\",\n        component: Cards,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/panel/profile\",\n        component: Profile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/panel/change-details\",\n        component: ProfileChangeDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/panel/messages\",\n        component: Messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/panel/help\",\n        component: Help,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: PageNotFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    initialDataStatus: state.panel.initialDataStatus\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuthStatus: status => dispatch(Actions.setAuthStatus(status)),\n    fetchInitialData: () => dispatch(Actions.fetchInitialData())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withAuth(Panel));","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/Containers/Panel/index.js"],"names":["React","Component","Fragment","Route","Switch","connect","Actions","withAuth","isValidToken","Loader","Navigation","PanelIntro","PageNotFound","Accounts","Transfers","Cards","Profile","ProfileChangeDetails","Messages","Panel","componentDidMount","then","props","setAuthStatus","fetchInitialData","catch","render","initialDataStatus","Help","mapStateToProps","state","panel","mapDispatchToProps","dispatch","status"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../../Actions';\nimport withAuth from 'hoc/WithAuth';\n\nimport { isValidToken } from 'tools';\n\nimport Loader from 'components/UI/Loader';\n\nimport Navigation from 'containers/Navigation';\nimport PanelIntro from 'containers/Panel/Intro';\nimport PageNotFound from 'components/PageNotFound';\n\nimport Accounts from 'containers/Accounts';\nimport Transfers from 'containers/Transfers';\nimport Cards from 'containers/Cards';\nimport Profile from 'containers/Profile';\nimport ProfileChangeDetails from 'containers/Profile/ChangeDetails';\nimport Messages from 'containers/Messages';\n\n\n// Get all user's initial data or redirect back to /login if not logged in\n// This is all handled in withAuth HOC\nclass Panel extends Component {\n   componentDidMount() {\n      isValidToken()\n         .then(() => {\n            this.props.setAuthStatus(true);\n            this.props.fetchInitialData();\n         })\n         .catch(() => {\n            this.props.setAuthStatus(false);\n         });\n   }\n\n   render() {\n      if (!this.props.initialDataStatus) {\n         return <Loader />;\n      } else {\n         return (\n            <Fragment>\n               <Route path=\"/panel\" component={Navigation} />\n\n               <Switch>\n                  <Route exact path=\"/panel\" component={PanelIntro} />\n                  <Route path=\"/panel/accounts\" component={Accounts} />\n                  <Route path=\"/panel/transfers\" component={Transfers} />\n                  <Route path=\"/panel/cards\" component={Cards} />\n                  <Route path=\"/panel/profile\" component={Profile} />\n                  <Route path=\"/panel/change-details\" component={ProfileChangeDetails} />\n                  <Route path=\"/panel/messages\" component={Messages} />\n                  <Route path=\"/panel/help\" component={Help} />\n                  <Route component={PageNotFound} />\n               </Switch>\n            </Fragment>\n         );\n      }\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n      initialDataStatus: state.panel.initialDataStatus\n   };\n};\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      setAuthStatus: status => dispatch(Actions.setAuthStatus(status)),\n      fetchInitialData: () => dispatch(Actions.fetchInitialData())\n   };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withAuth(Panel));\n"]},"metadata":{},"sourceType":"module"}