{"ast":null,"code":"// import _ from 'lodash';\n// import { getMyCards, changePin, changeLimits } from 'api/cards';\n// import * as actionTypes from './actionTypes';\n// // Get all user's cards\n// export const fetchCards = () => async dispatch => {\n//    try {\n//       const data = await getMyCards();\n//       if (!data) {\n//          dispatch(fetchCardsStatus(false));\n//          return;\n//       }\n//       dispatch({ type: actionTypes.FETCH_CARDS, data });\n//    } catch (err) {\n//       dispatch(fetchCardsStatus(false));\n//    }\n// };\n// export const fetchCardsStatus = status => ({\n//    type: actionTypes.FETCH_CARDS_STATUS,\n//    status\n// });\n// // Change card's PIN\n// export const changeCardPin = (id, newPin) => async dispatch => {\n//    try {\n//       const card = await changePin(id, newPin);\n//       if (!card) {\n//          return;\n//       }\n//       dispatch({ type: actionTypes.CARD_CHANGE_PIN, id, newPin });\n//    } catch (err) {}\n// };\n// // Change card's limits\n// export const changeCardLimits = (id, newOnlineLimit, newWithdrawalLimit) => async dispatch => {\n//    try {\n//       const limits = {};\n//       if (newOnlineLimit) {\n//          limits.dailyOnlineLimit = parseFloat(newOnlineLimit).toFixed(2);\n//       }\n//       if (newWithdrawalLimit) {\n//          limits.dailyWithdrawalLimit = parseFloat(newWithdrawalLimit).toFixed(2);\n//       }\n//       if (!_.isEmpty(limits)) {\n//          const card = await changeLimits(id, { ...limits });\n//          if (!card) {\n//             return;\n//          }\n//          dispatch({\n//             type: actionTypes.CARD_CHANGE_LIMITS,\n//             id,\n//             ...limits\n//          });\n//       }\n//    } catch (err) {}\n// };","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/Store/Actions/cards.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import _ from 'lodash';\n// import { getMyCards, changePin, changeLimits } from 'api/cards';\n// import * as actionTypes from './actionTypes';\n\n// // Get all user's cards\n// export const fetchCards = () => async dispatch => {\n//    try {\n//       const data = await getMyCards();\n\n//       if (!data) {\n//          dispatch(fetchCardsStatus(false));\n//          return;\n//       }\n\n//       dispatch({ type: actionTypes.FETCH_CARDS, data });\n//    } catch (err) {\n//       dispatch(fetchCardsStatus(false));\n//    }\n// };\n\n// export const fetchCardsStatus = status => ({\n//    type: actionTypes.FETCH_CARDS_STATUS,\n//    status\n// });\n\n// // Change card's PIN\n// export const changeCardPin = (id, newPin) => async dispatch => {\n//    try {\n//       const card = await changePin(id, newPin);\n\n//       if (!card) {\n//          return;\n//       }\n\n//       dispatch({ type: actionTypes.CARD_CHANGE_PIN, id, newPin });\n//    } catch (err) {}\n// };\n\n// // Change card's limits\n// export const changeCardLimits = (id, newOnlineLimit, newWithdrawalLimit) => async dispatch => {\n//    try {\n//       const limits = {};\n\n//       if (newOnlineLimit) {\n//          limits.dailyOnlineLimit = parseFloat(newOnlineLimit).toFixed(2);\n//       }\n\n//       if (newWithdrawalLimit) {\n//          limits.dailyWithdrawalLimit = parseFloat(newWithdrawalLimit).toFixed(2);\n//       }\n\n//       if (!_.isEmpty(limits)) {\n//          const card = await changeLimits(id, { ...limits });\n\n//          if (!card) {\n//             return;\n//          }\n\n//          dispatch({\n//             type: actionTypes.CARD_CHANGE_LIMITS,\n//             id,\n//             ...limits\n//          });\n//       }\n//    } catch (err) {}\n// };\n"]},"metadata":{},"sourceType":"module"}