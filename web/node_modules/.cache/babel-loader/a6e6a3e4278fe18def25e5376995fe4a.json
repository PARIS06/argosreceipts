{"ast":null,"code":"// import React from 'react';\n// import { Form, Field, withFormik } from 'formik';\n// import * as Yup from 'yup';\n// import SingleModuleButton from '../../../Components/UI/Buttons/SingleModuleButton';\n// const InnerForm = props => {\n//    const { errors, touched } = props;\n//    return (\n//       <Form>\n//          <div>\n//             <p>If you want to change email, please contact the administrator.</p>\n//             <p>Below you can change your password</p>\n//             <div className=\"form-group\">\n//                <Field type=\"email\" className=\"form-control login-input\" name=\"email\" disabled />\n//             </div>\n//             <div className=\"form-group\">\n//                <Field\n//                   type=\"password\"\n//                   className=\"form-control password-input\"\n//                   name=\"password\"\n//                   placeholder=\"Enter new password...\"\n//                />\n//                {touched.password && errors.password && (\n//                   <p className=\"field-invalid\">{errors.password}</p>\n//                )}\n//             </div>\n//             <p className=\"validation-info\">{props.status}</p>\n//          </div>\n//          <SingleModuleButton text=\"Save details\" type=\"submit\" />\n//       </Form>\n//    );\n// };\n// // Wrap our form with the using withFormik HoC\n// const ChangeDetailsForm = withFormik({\n//    // Transform outer props into form values\n//    mapPropsToValues: props => ({ email: props.userEmail, password: '' }),\n//    validationSchema: Yup.object().shape({\n//       email: Yup.string().email('This is not a valid email'),\n//       password: Yup.string().min(6, 'Your password has to be at least 6 characters')\n//    }),\n//    // Submission handler\n//    handleSubmit: (values, { props, setStatus }) => {\n//       const { email, password } = values;\n//       if (!password) {\n//          setStatus('No details changed');\n//          return;\n//       }\n//       setStatus('Sending...');\n//       props\n//          .changeUserDetails(email, password)\n//          .then(() => setStatus('Details successfully changed!'))\n//          .catch(error => setStatus('Problems... please log out and try again'));\n//    }\n// })(InnerForm);\n// export default ChangeDetailsForm;","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/Containers/Profile/ChangeDetails/Form.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React from 'react';\n// import { Form, Field, withFormik } from 'formik';\n// import * as Yup from 'yup';\n// import SingleModuleButton from '../../../Components/UI/Buttons/SingleModuleButton';\n\n// const InnerForm = props => {\n//    const { errors, touched } = props;\n\n//    return (\n//       <Form>\n//          <div>\n//             <p>If you want to change email, please contact the administrator.</p>\n//             <p>Below you can change your password</p>\n\n//             <div className=\"form-group\">\n//                <Field type=\"email\" className=\"form-control login-input\" name=\"email\" disabled />\n//             </div>\n\n//             <div className=\"form-group\">\n//                <Field\n//                   type=\"password\"\n//                   className=\"form-control password-input\"\n//                   name=\"password\"\n//                   placeholder=\"Enter new password...\"\n//                />\n//                {touched.password && errors.password && (\n//                   <p className=\"field-invalid\">{errors.password}</p>\n//                )}\n//             </div>\n\n//             <p className=\"validation-info\">{props.status}</p>\n//          </div>\n\n//          <SingleModuleButton text=\"Save details\" type=\"submit\" />\n//       </Form>\n//    );\n// };\n\n// // Wrap our form with the using withFormik HoC\n// const ChangeDetailsForm = withFormik({\n//    // Transform outer props into form values\n//    mapPropsToValues: props => ({ email: props.userEmail, password: '' }),\n\n//    validationSchema: Yup.object().shape({\n//       email: Yup.string().email('This is not a valid email'),\n//       password: Yup.string().min(6, 'Your password has to be at least 6 characters')\n//    }),\n\n//    // Submission handler\n//    handleSubmit: (values, { props, setStatus }) => {\n//       const { email, password } = values;\n\n//       if (!password) {\n//          setStatus('No details changed');\n//          return;\n//       }\n\n//       setStatus('Sending...');\n\n//       props\n//          .changeUserDetails(email, password)\n//          .then(() => setStatus('Details successfully changed!'))\n//          .catch(error => setStatus('Problems... please log out and try again'));\n//    }\n// })(InnerForm);\n\n// export default ChangeDetailsForm;\n"]},"metadata":{},"sourceType":"module"}