{"ast":null,"code":"const faker = require('faker');\n\nconst _ = require('lodash'); // Add padding from the start of the current string/number\n\n\nexport const myPadStart = (el, targetLength, padString) => {\n  return el.toString().padStart(targetLength, padString);\n}; // Insert something after every n characters in the string\n\nexport const chunker = (el, step, string) => {\n  const regExp = new RegExp(`.{${step}}`, 'g');\n  return el.toString().match(regExp).join(string);\n}; // export const defaultUserData = {\n//     email: faker.internet.email(),\n//     password: 'admin123',\n//     firstName: 'John',\n//     lastName: 'Tsiros',\n//     dateOfBirth: faker.date.between('1960-01-01', '2000-12-31'),\n//     phone: faker.phone.phoneNumberFormat(1),\n//     picture: faker.internet.avatar(),\n//     streetAddr: faker.address.streetAddress(),\n//     postcode: faker.address.zipCode(),\n//     city: faker.address.city()\n//  };\n//  const createUser = () => {\n//     const user = new User({ ...defaultUserData });\n//     return user.save();\n//  };\n//  const createControlledUser = () => {\n//     const user = new User({\n//        ...defaultUserData,\n//        email: 'email@example.com'\n//     });\n//     return user.save();\n//  };\n//  // Accounts\n//  const createAccount = user => {\n//     const account = new Account({\n//        type: faker.random.arrayElement(['credit', 'debit']),\n//        owner: user._id,\n//        isActive: faker.random.boolean(),\n//        sortcode: faker.finance.mask(6, false, false),\n//        number: faker.finance.mask(8, false, false),\n//        currency: faker.finance.currencyCode(),\n//        balance: faker.finance.amount(1, 10000, 2)\n//     });\n//     return account.save();\n//  };\n\nexport const defaultUser = {\n  email: faker.internet.email(),\n  password: 'admin123',\n  firstName: 'John',\n  lastName: 'Tsiros',\n  dateOfBirth: faker.date.between('1960-01-01', '2000-12-31'),\n  phone: faker.phone.phoneNumberFormat(1),\n  picture: faker.internet.avatar(),\n  streetAddr: faker.address.streetAddress(),\n  postcode: faker.address.zipCode(),\n  city: faker.address.city()\n}; // Accounts\n\nexport const accounts = [{\n  id: 1,\n  type: faker.random.arrayElement(['credit', 'debit']),\n  owner: defaultUser.id,\n  isActive: faker.random.boolean(),\n  sortcode: faker.finance.mask(6, false, false),\n  number: faker.finance.mask(8, false, false),\n  currency: faker.finance.currencyCode(),\n  balance: faker.finance.amount(1, 10000, 2)\n}, {\n  id: 2,\n  type: faker.random.arrayElement(['credit', 'debit']),\n  owner: defaultUser.id,\n  isActive: faker.random.boolean(),\n  sortcode: faker.finance.mask(6, false, false),\n  number: faker.finance.mask(8, false, false),\n  currency: faker.finance.currencyCode(),\n  balance: faker.finance.amount(1, 10000, 2)\n}]; // Cards\n\nexport const bankcards = [{\n  owner: defaultUser._id,\n  isActive: faker.random.boolean(),\n  number: faker.finance.mask(16, false, false),\n  expiresMonth: faker.random.number({\n    min: 1,\n    max: 12\n  }),\n  expiresYear: faker.random.number({\n    min: 2020,\n    max: 2030\n  })\n}, {\n  id: 2,\n  isActive: faker.random.boolean(),\n  number: faker.finance.mask(16, false, false),\n  expiresMonth: faker.random.number({\n    min: 1,\n    max: 12\n  }),\n  expiresYear: faker.random.number({\n    min: 2020,\n    max: 2030\n  })\n}]; // Receipts\n\nexport const receipts = [{\n  type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n  payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n  merchant_logo: `${faker.name.firstName()} ${faker.name.lastName()}`,\n  merchant_id: faker.finance.mask(16, false, false),\n  merchant_address: faker.random.arrayElement(['normal', 'turbo']),\n  coupon_barcode: faker.finance.mask(16, false, false),\n  register_terminal_id: faker.finance.mask(16, false, false),\n  cashier_info: faker.finance.mask(16, false, false),\n  item_name: faker.random.arrayElement(['normal', 'turbo']),\n  item_category: faker.random.arrayElement(['normal', 'turbo']),\n  offer: faker.finance.mask(16, false, false),\n  item_number: faker.finance.mask(16, false, false),\n  sku: faker.finance.mask(16, false, false),\n  transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n  number_of_items: faker.finance.mask(16, false, false),\n  date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_barcode: faker.finance.mask(16, false, false),\n  receipt_number: faker.finance.mask(16, false, false),\n  tax_amount: faker.finance.amount(1, 2500, 2),\n  tax_percentage: faker.finance.amount(1, 2500, 2),\n  sub_total: faker.finance.amount(1, 2500, 2),\n  total: faker.finance.amount(1, 2500, 2),\n  card_type: faker.random.arrayElement(['normal', 'turbo']),\n  last_four_digits: faker.finance.mask(16, false, false),\n  chip_read: faker.random.boolean(),\n  loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n  authorization_number: faker.finance.mask(16, false, false),\n  aid_code: faker.finance.mask(16, false, false),\n  vcd_number: faker.finance.mask(16, false, false),\n  consumer: faker.finance.mask(16, false, false),\n  status: faker.random.arrayElement(['planned', 'done']),\n  reference: faker.lorem.words(3).substring(0, 20)\n}, {\n  type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n  payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n  merchant_id: faker.finance.mask(16, false, false),\n  mercant_address: faker.random.arrayElement(['normal', 'turbo']),\n  coupon_barcode: faker.finance.mask(16, false, false),\n  register_terminal_id: faker.finance.mask(16, false, false),\n  cashier_info: faker.finance.mask(16, false, false),\n  item_name: faker.random.arrayElement(['normal', 'turbo']),\n  item_category: faker.random.arrayElement(['normal', 'turbo']),\n  offer: faker.finance.mask(16, false, false),\n  item_number: faker.finance.mask(16, false, false),\n  sku: faker.finance.mask(16, false, false),\n  transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n  number_of_items: faker.finance.mask(16, false, false),\n  date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_barcode: faker.finance.mask(16, false, false),\n  receipt_number: faker.finance.mask(16, false, false),\n  tax_amount: faker.finance.amount(1, 2500, 2),\n  tax_percentage: faker.finance.amount(1, 2500, 2),\n  sub_total: faker.finance.amount(1, 2500, 2),\n  total: faker.finance.amount(1, 2500, 2),\n  card_type: faker.random.arrayElement(['normal', 'turbo']),\n  last_four_digits: faker.finance.mask(16, false, false),\n  chip_read: faker.random.boolean(),\n  loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n  authorization_number: faker.finance.mask(16, false, false),\n  aid_code: faker.finance.mask(16, false, false),\n  vcd_number: faker.finance.mask(16, false, false),\n  consumer: faker.finance.mask(16, false, false),\n  status: faker.random.arrayElement(['planned', 'done']),\n  reference: faker.lorem.words(3).substring(0, 20)\n}, {\n  type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n  payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n  merchant_id: faker.finance.mask(16, false, false),\n  mercant_address: faker.random.arrayElement(['normal', 'turbo']),\n  coupon_barcode: faker.finance.mask(16, false, false),\n  register_terminal_id: faker.finance.mask(16, false, false),\n  cashier_info: faker.finance.mask(16, false, false),\n  item_name: faker.random.arrayElement(['normal', 'turbo']),\n  item_category: faker.random.arrayElement(['normal', 'turbo']),\n  offer: faker.finance.mask(16, false, false),\n  item_number: faker.finance.mask(16, false, false),\n  sku: faker.finance.mask(16, false, false),\n  transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n  number_of_items: faker.finance.mask(16, false, false),\n  date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_barcode: faker.finance.mask(16, false, false),\n  receipt_number: faker.finance.mask(16, false, false),\n  tax_amount: faker.finance.amount(1, 2500, 2),\n  tax_percentage: faker.finance.amount(1, 2500, 2),\n  sub_total: faker.finance.amount(1, 2500, 2),\n  total: faker.finance.amount(1, 2500, 2),\n  card_type: faker.random.arrayElement(['normal', 'turbo']),\n  last_four_digits: faker.finance.mask(16, false, false),\n  chip_read: faker.random.boolean(),\n  loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n  authorization_number: faker.finance.mask(16, false, false),\n  aid_code: faker.finance.mask(16, false, false),\n  vcd_number: faker.finance.mask(16, false, false),\n  consumer: faker.finance.mask(16, false, false),\n  status: faker.random.arrayElement(['planned', 'done']),\n  reference: faker.lorem.words(3).substring(0, 20)\n}, {\n  type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n  payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n  merchant_id: faker.finance.mask(16, false, false),\n  mercant_address: faker.random.arrayElement(['normal', 'turbo']),\n  coupon_barcode: faker.finance.mask(16, false, false),\n  register_terminal_id: faker.finance.mask(16, false, false),\n  cashier_info: faker.finance.mask(16, false, false),\n  item_name: faker.random.arrayElement(['normal', 'turbo']),\n  item_category: faker.random.arrayElement(['normal', 'turbo']),\n  offer: faker.finance.mask(16, false, false),\n  item_number: faker.finance.mask(16, false, false),\n  sku: faker.finance.mask(16, false, false),\n  transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n  number_of_items: faker.finance.mask(16, false, false),\n  date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_barcode: faker.finance.mask(16, false, false),\n  receipt_number: faker.finance.mask(16, false, false),\n  tax_amount: faker.finance.amount(1, 2500, 2),\n  tax_percentage: faker.finance.amount(1, 2500, 2),\n  sub_total: faker.finance.amount(1, 2500, 2),\n  total: faker.finance.amount(1, 2500, 2),\n  card_type: faker.random.arrayElement(['normal', 'turbo']),\n  last_four_digits: faker.finance.mask(16, false, false),\n  chip_read: faker.random.boolean(),\n  loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n  authorization_number: faker.finance.mask(16, false, false),\n  aid_code: faker.finance.mask(16, false, false),\n  vcd_number: faker.finance.mask(16, false, false),\n  consumer: faker.finance.mask(16, false, false),\n  status: faker.random.arrayElement(['planned', 'done']),\n  reference: faker.lorem.words(3).substring(0, 20)\n}];\nexport const profile = {\n  firstName: 'Tali',\n  lastName: 'Oppenheimer',\n  email: 'tali@oppenheimer.com',\n  phone: '617-555-5585',\n  streetAddr: '181 Guanajato',\n  city: 'Mexico City',\n  postcode: 12345\n};\nexport const stats = {\n  accsDetails: {\n    balance: 2000,\n    count: 2\n  }\n}; //  // Messages\n//  const createMessage = user => {\n//     const message = new Message({\n//        title: faker.lorem.words(5),\n//        sentDate: faker.date.between('2020-01-01', '2020-12-31'),\n//        recipient: user._id,\n//        content: faker.lorem.paragraph(),\n//        isRead: faker.random.boolean()\n//     });\n//     return message.save();\n//  };\n//  // Statistics\n//  const createStats = accountId => {\n//     const stats = new Stat({\n//        accountId,\n//        name: faker.date.recent(_.random(1, 60, false)),\n//        // Date is NOW or 1-60 days before\n//        date: faker.date.recent(_.random(1, 60, false)),\n//        income: faker.finance.amount(100, 5000, 2),\n//        expenses: faker.finance.amount(100, 5000, 2)\n//     });\n//     return stats.save();\n//  };","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/utils/Dummydata.js"],"names":["faker","require","_","myPadStart","el","targetLength","padString","toString","padStart","chunker","step","string","regExp","RegExp","match","join","defaultUser","email","internet","password","firstName","lastName","dateOfBirth","date","between","phone","phoneNumberFormat","picture","avatar","streetAddr","address","streetAddress","postcode","zipCode","city","accounts","id","type","random","arrayElement","owner","isActive","boolean","sortcode","finance","mask","number","currency","currencyCode","balance","amount","bankcards","_id","expiresMonth","min","max","expiresYear","receipts","payeeName","name","merchant_logo","merchant_id","merchant_address","coupon_barcode","register_terminal_id","cashier_info","item_name","item_category","offer","item_number","sku","transaction_type","number_of_items","receipt_expiration_date","receipt_barcode","receipt_number","tax_amount","tax_percentage","sub_total","total","card_type","last_four_digits","chip_read","loyalty_rewards_member_id","authorization_number","aid_code","vcd_number","consumer","status","reference","lorem","words","substring","mercant_address","profile","stats","accsDetails","count"],"mappings":"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","sourcesContent":["const faker = require('faker');\nconst _ = require('lodash');\n\n\n// Add padding from the start of the current string/number\nexport const myPadStart = (el, targetLength, padString) => {\n    return el.toString().padStart(targetLength, padString);\n };\n \n // Insert something after every n characters in the string\n export const chunker = (el, step, string) => {\n    const regExp = new RegExp(`.{${step}}`, 'g');\n    return el\n       .toString()\n       .match(regExp)\n       .join(string);\n };\n\n\n\n// export const defaultUserData = {\n//     email: faker.internet.email(),\n//     password: 'admin123',\n//     firstName: 'John',\n//     lastName: 'Tsiros',\n//     dateOfBirth: faker.date.between('1960-01-01', '2000-12-31'),\n//     phone: faker.phone.phoneNumberFormat(1),\n//     picture: faker.internet.avatar(),\n//     streetAddr: faker.address.streetAddress(),\n//     postcode: faker.address.zipCode(),\n//     city: faker.address.city()\n//  };\n \n//  const createUser = () => {\n//     const user = new User({ ...defaultUserData });\n \n//     return user.save();\n//  };\n \n//  const createControlledUser = () => {\n//     const user = new User({\n//        ...defaultUserData,\n//        email: 'email@example.com'\n//     });\n \n//     return user.save();\n//  };\n \n//  // Accounts\n//  const createAccount = user => {\n//     const account = new Account({\n//        type: faker.random.arrayElement(['credit', 'debit']),\n//        owner: user._id,\n//        isActive: faker.random.boolean(),\n//        sortcode: faker.finance.mask(6, false, false),\n//        number: faker.finance.mask(8, false, false),\n//        currency: faker.finance.currencyCode(),\n//        balance: faker.finance.amount(1, 10000, 2)\n//     });\n \n//     return account.save();\n//  };\n\n\nexport const defaultUser = {\n    email: faker.internet.email(),\n    password: 'admin123',\n    firstName: 'John',\n    lastName: 'Tsiros',\n    dateOfBirth: faker.date.between('1960-01-01', '2000-12-31'),\n    phone: faker.phone.phoneNumberFormat(1),\n    picture: faker.internet.avatar(),\n    streetAddr: faker.address.streetAddress(),\n    postcode: faker.address.zipCode(),\n    city: faker.address.city()\n };\n \n // Accounts\n\n export const accounts =  [\n   {\n       id: 1,\n       type: faker.random.arrayElement(['credit', 'debit']),\n       owner: defaultUser.id,\n       isActive: faker.random.boolean(),\n       sortcode: faker.finance.mask(6, false, false),\n       number: faker.finance.mask(8, false, false),\n       currency: faker.finance.currencyCode(),\n       balance: faker.finance.amount(1, 10000, 2)\n    },\n    {\n      id: 2,\n       type: faker.random.arrayElement(['credit', 'debit']),\n       owner: defaultUser.id,\n       isActive: faker.random.boolean(),\n       sortcode: faker.finance.mask(6, false, false),\n       number: faker.finance.mask(8, false, false),\n       currency: faker.finance.currencyCode(),\n       balance: faker.finance.amount(1, 10000, 2)\n    },\n\n]\n\n\n // Cards\n    export const bankcards =  [\n        {\n            owner: defaultUser._id,\n            isActive: faker.random.boolean(),\n            number: faker.finance.mask(16, false, false),\n            expiresMonth: faker.random.number({ min: 1, max: 12 }),\n            expiresYear: faker.random.number({ min: 2020, max: 2030 }),\n         },\n         {\n            id: 2,\n            isActive: faker.random.boolean(),\n            number: faker.finance.mask(16, false, false),\n            expiresMonth: faker.random.number({ min: 1, max: 12 }),\n            expiresYear: faker.random.number({ min: 2020, max: 2030 }),\n         },\n\n    ]\n\n \n // Receipts\n \n    export const receipts = [\n        {\n            type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n            payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n            merchant_logo: `${faker.name.firstName()} ${faker.name.lastName()}`,\n            merchant_id: faker.finance.mask(16, false, false),\n            merchant_address: faker.random.arrayElement(['normal', 'turbo']),\n            coupon_barcode: faker.finance.mask(16, false, false),\n            register_terminal_id: faker.finance.mask(16, false, false),\n            cashier_info: faker.finance.mask(16, false, false),\n            item_name: faker.random.arrayElement(['normal', 'turbo']),\n            item_category: faker.random.arrayElement(['normal', 'turbo']),\n            offer:faker.finance.mask(16, false, false),\n            item_number: faker.finance.mask(16, false, false),\n            sku: faker.finance.mask(16, false, false),\n            transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n            number_of_items: faker.finance.mask(16, false, false),\n            date: faker.date.between('2020-01-01', '2020-12-31'),\n            receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n            receipt_barcode: faker.finance.mask(16, false, false),\n            receipt_number: faker.finance.mask(16, false, false),\n            tax_amount: faker.finance.amount(1, 2500, 2),\n            tax_percentage: faker.finance.amount(1, 2500, 2),\n            sub_total: faker.finance.amount(1, 2500, 2),\n            total: faker.finance.amount(1, 2500, 2),\n            card_type: faker.random.arrayElement(['normal', 'turbo']),\n            last_four_digits: faker.finance.mask(16, false, false),\n            chip_read: faker.random.boolean(),\n            loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n            authorization_number: faker.finance.mask(16, false, false),\n            aid_code: faker.finance.mask(16, false, false),\n            vcd_number: faker.finance.mask(16, false, false),\n            consumer: faker.finance.mask(16, false, false),\n            status: faker.random.arrayElement(['planned', 'done']),\n            reference: faker.lorem.words(3).substring(0, 20),\n    },\n    {\n        type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n        payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n        merchant_id: faker.finance.mask(16, false, false),\n        mercant_address: faker.random.arrayElement(['normal', 'turbo']),\n        coupon_barcode: faker.finance.mask(16, false, false),\n        register_terminal_id: faker.finance.mask(16, false, false),\n        cashier_info: faker.finance.mask(16, false, false),\n        item_name: faker.random.arrayElement(['normal', 'turbo']),\n        item_category: faker.random.arrayElement(['normal', 'turbo']),\n        offer:faker.finance.mask(16, false, false),\n        item_number: faker.finance.mask(16, false, false),\n        sku: faker.finance.mask(16, false, false),\n        transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n        number_of_items: faker.finance.mask(16, false, false),\n        date: faker.date.between('2020-01-01', '2020-12-31'),\n        receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n        receipt_barcode: faker.finance.mask(16, false, false),\n        receipt_number: faker.finance.mask(16, false, false),\n        tax_amount: faker.finance.amount(1, 2500, 2),\n        tax_percentage: faker.finance.amount(1, 2500, 2),\n        sub_total: faker.finance.amount(1, 2500, 2),\n        total: faker.finance.amount(1, 2500, 2),\n        card_type: faker.random.arrayElement(['normal', 'turbo']),\n        last_four_digits: faker.finance.mask(16, false, false),\n        chip_read: faker.random.boolean(),\n        loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n        authorization_number: faker.finance.mask(16, false, false),\n        aid_code: faker.finance.mask(16, false, false),\n        vcd_number: faker.finance.mask(16, false, false),\n        consumer: faker.finance.mask(16, false, false),\n        status: faker.random.arrayElement(['planned', 'done']),\n        reference: faker.lorem.words(3).substring(0, 20),\n     },\n     {\n        type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n        payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n        merchant_id: faker.finance.mask(16, false, false),\n        mercant_address: faker.random.arrayElement(['normal', 'turbo']),\n        coupon_barcode: faker.finance.mask(16, false, false),\n        register_terminal_id: faker.finance.mask(16, false, false),\n        cashier_info: faker.finance.mask(16, false, false),\n        item_name: faker.random.arrayElement(['normal', 'turbo']),\n        item_category: faker.random.arrayElement(['normal', 'turbo']),\n        offer:faker.finance.mask(16, false, false),\n        item_number: faker.finance.mask(16, false, false),\n        sku: faker.finance.mask(16, false, false),\n        transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n        number_of_items: faker.finance.mask(16, false, false),\n        date: faker.date.between('2020-01-01', '2020-12-31'),\n        receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n        receipt_barcode: faker.finance.mask(16, false, false),\n        receipt_number: faker.finance.mask(16, false, false),\n        tax_amount: faker.finance.amount(1, 2500, 2),\n        tax_percentage: faker.finance.amount(1, 2500, 2),\n        sub_total: faker.finance.amount(1, 2500, 2),\n        total: faker.finance.amount(1, 2500, 2),\n        card_type: faker.random.arrayElement(['normal', 'turbo']),\n        last_four_digits: faker.finance.mask(16, false, false),\n        chip_read: faker.random.boolean(),\n        loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n        authorization_number: faker.finance.mask(16, false, false),\n        aid_code: faker.finance.mask(16, false, false),\n        vcd_number: faker.finance.mask(16, false, false),\n        consumer: faker.finance.mask(16, false, false),\n        status: faker.random.arrayElement(['planned', 'done']),\n        reference: faker.lorem.words(3).substring(0, 20),\n     },\n     {\n        type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n        payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n        merchant_id: faker.finance.mask(16, false, false),\n        mercant_address: faker.random.arrayElement(['normal', 'turbo']),\n        coupon_barcode: faker.finance.mask(16, false, false),\n        register_terminal_id: faker.finance.mask(16, false, false),\n        cashier_info: faker.finance.mask(16, false, false),\n        item_name: faker.random.arrayElement(['normal', 'turbo']),\n        item_category: faker.random.arrayElement(['normal', 'turbo']),\n        offer:faker.finance.mask(16, false, false),\n        item_number: faker.finance.mask(16, false, false),\n        sku: faker.finance.mask(16, false, false),\n        transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n        number_of_items: faker.finance.mask(16, false, false),\n        date: faker.date.between('2020-01-01', '2020-12-31'),\n        receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n        receipt_barcode: faker.finance.mask(16, false, false),\n        receipt_number: faker.finance.mask(16, false, false),\n        tax_amount: faker.finance.amount(1, 2500, 2),\n        tax_percentage: faker.finance.amount(1, 2500, 2),\n        sub_total: faker.finance.amount(1, 2500, 2),\n        total: faker.finance.amount(1, 2500, 2),\n        card_type: faker.random.arrayElement(['normal', 'turbo']),\n        last_four_digits: faker.finance.mask(16, false, false),\n        chip_read: faker.random.boolean(),\n        loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n        authorization_number: faker.finance.mask(16, false, false),\n        aid_code: faker.finance.mask(16, false, false),\n        vcd_number: faker.finance.mask(16, false, false),\n        consumer: faker.finance.mask(16, false, false),\n        status: faker.random.arrayElement(['planned', 'done']),\n        reference: faker.lorem.words(3).substring(0, 20),\n     }\n];\n \nexport const profile = \n    {\n    firstName: 'Tali',\n    lastName: 'Oppenheimer',\n    email: 'tali@oppenheimer.com',\n    phone: '617-555-5585',\n    streetAddr: '181 Guanajato',\n    city: 'Mexico City',\n    postcode: 12345,\n}\n\nexport const stats = {\naccsDetails: {\n    balance: 2000,\n    count: 2\n    }\n}\n \n//  // Messages\n//  const createMessage = user => {\n//     const message = new Message({\n//        title: faker.lorem.words(5),\n//        sentDate: faker.date.between('2020-01-01', '2020-12-31'),\n//        recipient: user._id,\n//        content: faker.lorem.paragraph(),\n//        isRead: faker.random.boolean()\n//     });\n \n//     return message.save();\n//  };\n \n//  // Statistics\n//  const createStats = accountId => {\n//     const stats = new Stat({\n//        accountId,\n//        name: faker.date.recent(_.random(1, 60, false)),\n//        // Date is NOW or 1-60 days before\n//        date: faker.date.recent(_.random(1, 60, false)),\n//        income: faker.finance.amount(100, 5000, 2),\n//        expenses: faker.finance.amount(100, 5000, 2)\n//     });\n \n//     return stats.save();\n//  };"]},"metadata":{},"sourceType":"module"}