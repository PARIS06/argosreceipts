{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './Reducers';\nimport { routerMiddleware, ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk'; // Activate Redux DevTools only in dev mode\n\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport logger from 'redux-logger';\nconst history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst middlewares = [thunk, logger, routeMiddleware];\nexport default function configureStore(initialState) {\n  const store = createStore(ConnectedRouter(rootReducer(history)), initialState, composeWithDevTools(applyMiddleware(...middlewares)));\n  return store;\n}\nexport { history };","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/store/index.js"],"names":["applyMiddleware","createStore","rootReducer","routerMiddleware","ConnectedRouter","createBrowserHistory","thunk","composeWithDevTools","logger","history","routeMiddleware","middlewares","configureStore","initialState","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,wBAAlD;AAEA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,SAASC,mBAAT,QAAoC,0CAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,OAAO,GAAGJ,oBAAoB,EAApC;AACA,MAAMK,eAAe,GAAGP,gBAAgB,CAACM,OAAD,CAAxC;AACA,MAAME,WAAW,GAAG,CAACL,KAAD,EAAQE,MAAR,EAAgBE,eAAhB,CAApB;AAEA,eAAe,SAASE,cAAT,CAAwBC,YAAxB,EAAsC;AAClD,QAAMC,KAAK,GAAGb,WAAW,CACtBG,eAAe,CAAEF,WAAD,CAAcO,OAAd,CAAD,CADO,EAEtBI,YAFsB,EAGtBN,mBAAmB,CAACP,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CAHG,CAAzB;AAMA,SAAOG,KAAP;AACF;AAED,SAASL,OAAT","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './Reducers';\nimport { routerMiddleware, ConnectedRouter } from 'connected-react-router';\n\nimport { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\n\n// Activate Redux DevTools only in dev mode\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport logger from 'redux-logger';\n\nconst history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst middlewares = [thunk, logger, routeMiddleware];\n\nexport default function configureStore(initialState) {\n   const store = createStore(\n      ConnectedRouter((rootReducer)(history)),\n      initialState,\n      composeWithDevTools(applyMiddleware(...middlewares))\n   );\n\n   return store;\n}\n\nexport { history };\n\n"]},"metadata":{},"sourceType":"module"}