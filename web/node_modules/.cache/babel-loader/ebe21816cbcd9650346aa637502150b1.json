{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/Containers/Authorization/Register/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../../Actions';\nimport withAuth from '../../../Hoc/WithAuth';\nimport Input from '../../../Components/UI/FormBoxes/Input/Input';\nimport RegisterBox from '../../../Components/Authorization/Register';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        firstName: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Enter your first name'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 255\n          },\n          valid: false,\n          touched: false\n        },\n        lastName: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Enter your last name'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 255\n          },\n          valid: false,\n          touched: false\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Enter your email address'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Enter your password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      } // loading: false,\n      // error: null\n\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      const formData = {};\n\n      for (let formElementIdentifer in this.state.orderForm) {\n        formData[formElementIdentifer] = this.state.orderForm[formElementIdentifer].value;\n      }\n\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.price,\n        orderData: formData\n      };\n    };\n\n    this.inputChangedHandler = (event, controlName) => {\n      const updatedControls = { ...this.state.controls,\n        [controlName]: { ...this.state.controls[controlName],\n          value: event.target.value,\n          valid: this.checkValidation(event.target.value, this.state.controls[controlName].validation),\n          touched: true\n        }\n      };\n      this.setState({\n        controls: updatedControls\n      });\n    };\n\n    this.onRegisterSubmit = (email, password, user_type) => {\n      this.setState({\n        loading: true,\n        error: null\n      }); // Dispatch auth action\n      // There will be automatic redirect to panel, in HOC\n\n      this.props.register({\n        email,\n        password,\n        user_type\n      }).catch(error => this.setState({\n        loading: false,\n        error\n      }));\n    };\n  }\n\n  checkValidation(value, rules) {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    const form = formElementsArray.map(formElement => React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      changed: event => this.inputChangedHandler(event, formElement.id),\n      invalid: !formElement.config.valid,\n      touched: formElement.config.touched,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(RegisterBox, {\n      history: this.props.history,\n      onRegisterSubmit: this.onRegisterSubmit,\n      loading: this.state.loading,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \" \", form)));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/Containers/Authorization/Register/index.js"],"names":["React","Component","connect","Actions","withAuth","Input","RegisterBox","Register","state","controls","firstName","elementType","elementConfig","type","placeholder","value","validation","required","minLength","maxLength","valid","touched","lastName","email","isEmail","password","orderHandler","event","preventDefault","formData","formElementIdentifer","orderForm","order","ingredients","props","price","orderData","inputChangedHandler","controlName","updatedControls","target","checkValidation","setState","onRegisterSubmit","user_type","loading","error","register","catch","rules","isValid","trim","length","pattern","test","isNumeric","render","formElementsArray","key","push","id","config","form","map","formElement","history"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../../Actions';\nimport withAuth from '../../../Hoc/WithAuth';\nimport Input from '../../../Components/UI/FormBoxes/Input/Input';\n\nimport RegisterBox from '../../../Components/Authorization/Register';\n\nclass Register extends Component {\n   state = {\n      controls: {\n         firstName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Enter your first name'\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 5,\n                maxLength: 255\n            },\n            valid: false,\n            touched: false\n        },\n        lastName: {\n            elementType: 'input',\n            elementConfig: {\n               type: 'text',\n               placeholder: 'Enter your last name'\n            },\n            value: '',\n            validation: {\n               required: true,\n               minLength: 5,\n               maxLength: 255\n            },\n            valid: false,\n            touched: false\n         },\n         email: {\n            elementType: 'input',\n            elementConfig: {\n               type: 'email',\n               placeholder: 'Enter your email address'\n            },\n            value: '',\n            validation: {\n               required: true,\n               isEmail: true\n            },\n            valid: false,\n            touched: false\n         },\n         password: {\n            elementType: 'input',\n            elementConfig: {\n               type: 'password',\n               placeholder: 'Enter your password'\n            },\n            value: '',\n            validation: {\n               required: true,\n               minLength: 6\n            },\n            valid: false,\n            touched: false\n         },\n      },\n      // loading: false,\n      // error: null\n   };\n\n   orderHandler = (event) => {\n      event.preventDefault();\n      const formData = {};\n      for (let formElementIdentifer in this.state.orderForm) {\n          formData[formElementIdentifer] = this.state.orderForm[formElementIdentifer].value\n      }\n      const order = {\n          ingredients: this.props.ingredients,\n          price: this.props.price,\n          orderData: formData\n      }\n  }\n\n  checkValidation(value, rules) {\n      let isValid = true;\n      if (rules.required) {\n          isValid = value.trim() !=='' && isValid;\n      }\n      if (rules.minLength) {\n          isValid = value.length >= rules.minLength && isValid\n      }\n      if (rules.maxLength) {\n          isValid = value.length <= rules.maxLength && isValid\n      }\n      if (rules.isEmail) {\n         const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n         isValid = pattern.test(value) && isValid\n      }\n     if (rules.isNumeric) {\n         const pattern = /^\\d+$/;\n         isValid = pattern.test(value) && isValid\n      }\n      return isValid;\n  }\n\n  inputChangedHandler = (event, controlName) => {\n      const updatedControls = {\n         ...this.state.controls,\n         [controlName]: {\n            ...this.state.controls[controlName],\n            value: event.target.value,\n            valid: this.checkValidation(event.target.value, this.state.controls[controlName].validation),\n            touched: true\n         }\n      };\n      this.setState({controls: updatedControls});\n  }\n\n   render() {\n      const formElementsArray = []\n      for (let key in this.state.controls) {\n          formElementsArray.push({\n              id: key,\n              config: this.state.controls[key]\n          });\n      }\n\n      const form = formElementsArray.map(formElement => (\n         <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value} \n            changed={(event) => this.inputChangedHandler(event, formElement.id)}\n            invalid={!formElement.config.valid}\n            touched={formElement.config.touched}\n         />\n      ));\n      \n      return (\n         <div className=\"row\">\n            <div className=\"col\">\n               <RegisterBox\n                  history={this.props.history}\n                  onRegisterSubmit={this.onRegisterSubmit}\n                  loading={this.state.loading}\n                  error={this.state.error}\n               > {form}\n               </RegisterBox>\n              \n            </div>\n         </div>\n      );\n   }\n\n   onRegisterSubmit = (email, password, user_type) => {\n      this.setState({ loading: true, error: null });\n\n      // Dispatch auth action\n      // There will be automatic redirect to panel, in HOC\n      this.props\n         .register({ email, password, user_type })\n         .catch(error => this.setState({ loading: false, error }));\n   };\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}