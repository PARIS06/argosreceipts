{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/containers/Merchant/Merchant.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom'; // import { connect } from 'react-redux';\n// // import * as Actions from '../../store/Actions';\n// // import withAuth from '../../hoc/WithAuth';\n// import { isValidToken } from '../../Tools';\n\nimport Dashboard from '../../components/Merchant/Dashboard';\nimport ReceiptBuilder from '../../components/Merchant/ReceiptBuilder/ReceiptBuilder';\nimport ReceiptTemplate from '../../components/Merchant/ReceiptBuilder/ReceiptTemplate/ReceiptTemplate'; // Get all user's initial data or redirect back to /login if not logged in\n// This is all handled in withAuth HOC\n\nclass Merchant extends Component {\n  //    componentDidMount() {\n  //       isValidToken()\n  //          .then(() => {\n  //             this.props.setAuthStatus(true);\n  //             this.props.fetchInitialData();\n  //          })\n  //          .catch(() => {\n  //             this.props.setAuthStatus(false);\n  //          });\n  //    }\n  render() {\n    //   if (!this.props.initialDataStatus) {\n    //      return <Loader />;\n    //   } else {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/merchants\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/merchants/receiptbuilder\",\n      component: ReceiptBuilder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/merchants/create-receipt\",\n      component: ReceiptTemplate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Merchant; // const mapStateToProps = state => {\n//    return {\n//       initialDataStatus: state.panel.initialDataStatus\n//    };\n// };\n// const mapDispatchToProps = dispatch => {\n//    return {\n//       setAuthStatus: status => dispatch(Actions.setAuthStatus(status)),\n//       fetchInitialData: () => dispatch(Actions.fetchInitialData())\n//    };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(withAuth(Panel));","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/containers/Merchant/Merchant.js"],"names":["React","Component","Fragment","Route","Switch","Dashboard","ReceiptBuilder","ReceiptTemplate","Merchant","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CACA;AACA;AACA;AAEA;;AAEA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,OAAOC,eAAP,MAA4B,0EAA5B,C,CAIA;AACA;;AACA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEGQ,EAAAA,MAAM,GAAG;AACR;AACA;AACA;AACK,WACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,YAAlB;AAA+B,MAAA,SAAS,EAAEJ,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,2BAAZ;AAAwC,MAAA,SAAS,EAAEC,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,EAGG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,2BAAZ;AAAwC,MAAA,SAAS,EAAEC,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CAHH,CADH;AAYL;;AA5B6B;;AA+BjC,eAAeC,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// // import * as Actions from '../../store/Actions';\n// // import withAuth from '../../hoc/WithAuth';\n\n// import { isValidToken } from '../../Tools';\n\nimport Dashboard from '../../components/Merchant/Dashboard';\nimport ReceiptBuilder from '../../components/Merchant/ReceiptBuilder/ReceiptBuilder';\nimport ReceiptTemplate from '../../components/Merchant/ReceiptBuilder/ReceiptTemplate/ReceiptTemplate';\n\n\n\n// Get all user's initial data or redirect back to /login if not logged in\n// This is all handled in withAuth HOC\nclass Merchant extends Component {\n//    componentDidMount() {\n//       isValidToken()\n//          .then(() => {\n//             this.props.setAuthStatus(true);\n//             this.props.fetchInitialData();\n//          })\n//          .catch(() => {\n//             this.props.setAuthStatus(false);\n//          });\n//    }\n\n   render() {\n    //   if (!this.props.initialDataStatus) {\n    //      return <Loader />;\n    //   } else {\n         return (\n            <Fragment>\n               {/* <Route path=\"/panel\" component={Navigation} /> */}\n\n               <Switch>\n                  <Route exact path=\"/merchants\" component={Dashboard} />\n                  <Route path=\"/merchants/receiptbuilder\" component={ReceiptBuilder} />\n                  <Route path=\"/merchants/create-receipt\" component={ReceiptTemplate} />\n                  \n               </Switch>\n            </Fragment>\n         );\n   }\n}\n\nexport default Merchant;\n\n// const mapStateToProps = state => {\n//    return {\n//       initialDataStatus: state.panel.initialDataStatus\n//    };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//    return {\n//       setAuthStatus: status => dispatch(Actions.setAuthStatus(status)),\n//       fetchInitialData: () => dispatch(Actions.fetchInitialData())\n//    };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(withAuth(Panel));\n"]},"metadata":{},"sourceType":"module"}