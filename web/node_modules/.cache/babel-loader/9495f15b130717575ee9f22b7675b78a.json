{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/components/App/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport * as actions from '../../store/Actions'; // import withAuth from '../../hoc/WithAuth';\n\nimport { isValidToken } from '../../utils/tools';\nimport Loader from '../UI/Loader';\nimport Layout from '../../hoc/Layout';\nimport Home from '../../containers/Home';\nimport Panel from '../../containers/Panel'; // import Login from '../../containers/Authorization/Login';\n// import Register from '../../containers/Authorization/Register';\n\nimport Logout from '../../components/Authorization/Logout/';\nimport PageNotFound from '../PageNotFound'; // import { card } from '../../utils/Dummydata'; \n\nimport './app.scss';\nimport Merchant from '../../containers/Merchant/Merchant'; // Get all user's initial data or redirect back to /login if not logged in\n// This is all handled in withAuth HOC\n\nclass App extends Component {\n  componentDidMount() {\n    isValidToken().then(() => {\n      this.props.setAuthStatus(true);\n      this.props.fetchInitialData();\n    }).catch(() => {\n      this.props.setAuthStatus(false);\n    });\n  }\n\n  render() {\n    // if (!this.props.initialDataStatus) {\n    //    return <Loader />;\n    // } else {\n    return React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/merchants\",\n      component: Merchant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/logout\",\n      component: Logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel\",\n      component: Panel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: PageNotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))); //    }\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuthStatus: status => dispatch(actions.setAuthStatus(status))\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/components/App/index.js"],"names":["React","Component","connect","Route","Switch","withRouter","actions","isValidToken","Loader","Layout","Home","Panel","Logout","PageNotFound","Merchant","App","componentDidMount","then","props","setAuthStatus","fetchInitialData","catch","render","mapDispatchToProps","dispatch","status"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB,C,CACA;;AAEA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB,C,CAEA;AACA;;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,YAAP,MAAyB,iBAAzB,C,CAGA;;AAEA,OAAO,YAAP;AAEA,OAAOC,QAAP,MAAqB,oCAArB,C,CAIA;AACA;;AACA,MAAMC,GAAN,SAAkBd,SAAlB,CAA4B;AACzBe,EAAAA,iBAAiB,GAAG;AACjBT,IAAAA,YAAY,GACRU,IADJ,CACS,MAAM;AACT,WAAKC,KAAL,CAAWC,aAAX,CAAyB,IAAzB;AACA,WAAKD,KAAL,CAAWE,gBAAX;AACF,KAJJ,EAKIC,KALJ,CAKU,MAAM;AACV,WAAKH,KAAL,CAAWC,aAAX,CAAyB,KAAzB;AACF,KAPJ;AAQF;;AAEDG,EAAAA,MAAM,GAAG;AACN;AACA;AACA;AACG,WAEM,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEZ,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAEI,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,EAGG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEF,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,EAKG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAED,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,EAMG,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEE,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH,CADH,CAFN,CAJG,CAmBZ;AACC;;AAhC2B;;AAmC5B,MAAMU,kBAAkB,GAAGC,QAAQ,IAAI;AACpC,SAAO;AACJL,IAAAA,aAAa,EAAEM,MAAM,IAAID,QAAQ,CAAClB,OAAO,CAACa,aAAR,CAAsBM,MAAtB,CAAD;AAD7B,GAAP;AAGF,CAJD;;AAMA,eAAepB,UAAU,CAACH,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCR,GAAlC,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport * as actions from '../../store/Actions';\n// import withAuth from '../../hoc/WithAuth';\n\nimport { isValidToken } from '../../utils/tools';\n\nimport Loader from '../UI/Loader';\n\nimport Layout from '../../hoc/Layout';\n\nimport Home from '../../containers/Home';\nimport Panel from '../../containers/Panel';\n\n// import Login from '../../containers/Authorization/Login';\n// import Register from '../../containers/Authorization/Register';\nimport Logout from '../../components/Authorization/Logout/';\nimport PageNotFound from '../PageNotFound';\n\n\n// import { card } from '../../utils/Dummydata'; \n\nimport './app.scss';\n\nimport Merchant from '../../containers/Merchant/Merchant';\n\n\n\n// Get all user's initial data or redirect back to /login if not logged in\n// This is all handled in withAuth HOC\nclass App extends Component {\n   componentDidMount() {\n      isValidToken()\n         .then(() => {\n            this.props.setAuthStatus(true);\n            this.props.fetchInitialData();\n         })\n         .catch(() => {\n            this.props.setAuthStatus(false);\n         });\n   }\n\n   render() {\n      // if (!this.props.initialDataStatus) {\n      //    return <Loader />;\n      // } else {\n         return (\n           \n               <Layout>\n                  <Switch>\n                     <Route exact path=\"/\" component={Home} />\n                     <Route path=\"/merchants\" component={Merchant} />\n                     <Route path=\"/logout\" component={Logout} />\n                     {/* <Route path=\"/auth/create-user\" component={Register} /> */}\n                     <Route path=\"/panel\" component={Panel} />\n                     <Route component={PageNotFound} />\n               </Switch>\n               </Layout>\n           \n           \n         );\n//    }\n}\n}\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      setAuthStatus: status => dispatch(actions.setAuthStatus(status))\n   };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}