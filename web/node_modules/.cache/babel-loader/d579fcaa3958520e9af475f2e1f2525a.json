{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/components/App/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport * as Actions from '../../store/Actions'; // import withAuth from '../../hoc/WithAuth';\n// import { isValidToken } from '../../Tools';\n// import Loader from '../UI/Loader';\n\nimport Layout from '../../hoc/Layout';\nimport Login from '../../containers/Authorization/Login';\nimport Logout from '../../components/Authorization/Logout/';\nimport PageNotFound from '../PageNotFound'; // import { card } from '../../utils/Dummydata'; \n\nimport './app.scss'; // Get all user's initial data or redirect back to /login if not logged in\n// This is all handled in withAuth HOC\n\nclass App extends Component {\n  //    componentDidMount() {\n  //       isValidToken()\n  //          .then(() => {\n  //             this.props.setAuthStatus(true);\n  //             this.props.fetchInitialData();\n  //          })\n  //          .catch(() => {\n  //             this.props.setAuthStatus(false);\n  //          });\n  //    }\n  render() {\n    //   if (!this.props.initialDataStatus) {\n    //      return <Loader />;\n    //   } else {\n    return React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/panel\",\n      component: Navigation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/panel\",\n      component: Panel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/auth-login/\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel/cards\",\n      component: Logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel/profile\",\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel/change-details\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: PageNotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuthStatus: status => dispatch(Actions.setAuthStatus(status))\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/components/App/index.js"],"names":["React","Component","Fragment","connect","Route","Switch","withRouter","Actions","Layout","Login","Logout","PageNotFound","App","render","Navigation","Panel","Register","Home","mapDispatchToProps","dispatch","setAuthStatus","status"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB,C,CACA;AAEA;AAEA;;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAOC,KAAP,MAAkB,sCAAlB;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,YAAP,MAAyB,iBAAzB,C,CAGA;;AAEA,OAAO,YAAP,C,CAGA;AACA;;AACA,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEGY,EAAAA,MAAM,GAAG;AACR;AACA;AACA;AACK,WACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAGG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,cAAZ;AAA2B,MAAA,SAAS,EAAEN,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,EAGG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,cAAZ;AAA2B,MAAA,SAAS,EAAEC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,EAIG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,gBAAZ;AAA6B,MAAA,SAAS,EAAEM,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,EAKG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,uBAAZ;AAAoC,MAAA,SAAS,EAAEC,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,EAMG,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEN,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH,CAHH,CADA,CADH;AAgBL;;AAhCwB;;AAoC5B,MAAMO,kBAAkB,GAAGC,QAAQ,IAAI;AACpC,SAAO;AACJC,IAAAA,aAAa,EAAEC,MAAM,IAAIF,QAAQ,CAACZ,OAAO,CAACa,aAAR,CAAsBC,MAAtB,CAAD;AAD7B,GAAP;AAGF,CAJD;;AAMA,eAAef,UAAU,CAACH,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAkCN,GAAlC,CAAD,CAAzB","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport * as Actions from '../../store/Actions';\n// import withAuth from '../../hoc/WithAuth';\n\n// import { isValidToken } from '../../Tools';\n\n// import Loader from '../UI/Loader';\n\nimport Layout from '../../hoc/Layout';\n\nimport Login from '../../containers/Authorization/Login';\nimport Logout from '../../components/Authorization/Logout/'\nimport PageNotFound from '../PageNotFound';\n\n\n// import { card } from '../../utils/Dummydata'; \n\nimport './app.scss';\n\n\n// Get all user's initial data or redirect back to /login if not logged in\n// This is all handled in withAuth HOC\nclass App extends Component {\n//    componentDidMount() {\n//       isValidToken()\n//          .then(() => {\n//             this.props.setAuthStatus(true);\n//             this.props.fetchInitialData();\n//          })\n//          .catch(() => {\n//             this.props.setAuthStatus(false);\n//          });\n//    }\n\n   render() {\n    //   if (!this.props.initialDataStatus) {\n    //      return <Loader />;\n    //   } else {\n         return (\n            <Layout>\n            <Fragment>\n               <Route path=\"/panel\" component={Navigation} />\n\n               <Switch>\n                  <Route exact path=\"/panel\" component={Panel} />\n                  <Route path=\"/auth-login/\" component={Login} />\n                  <Route path=\"/panel/cards\" component={Logout} />\n                  <Route path=\"/panel/profile\" component={Register} />\n                  <Route path=\"/panel/change-details\" component={Home} />\n                  <Route component={PageNotFound} />\n               </Switch>\n            </Fragment>\n            </Layout>\n         );\n   }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      setAuthStatus: status => dispatch(Actions.setAuthStatus(status))\n   };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}