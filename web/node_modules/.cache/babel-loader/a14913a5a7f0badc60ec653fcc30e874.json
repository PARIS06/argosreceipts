{"ast":null,"code":"// import React, { Component, Fragment } from 'react';\n// import { Route, Switch } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import * as Actions from '../../Store/Actions';\n// import withAuth from '../../Hoc/WithAuth';\n// import { isValidToken } from '../../Tools';\n// import Loader from '../../Components/UI/Loader';\n// import Navigation from '../../Containers/Navigation';\n// import PanelIntro from '../Panel/Intro';\n// import PageNotFound from '../../Components/PageNotFound';\n// import Accounts from '../../Containers/Accounts';\n// import Receipts from '../../Containers/Receipts';\n// import Cards from '../../Containers/Cards';\n// import Profile from '../../Containers/Profile';\n// import ProfileChangeDetails from '../../Containers/Profile/ChangeDetails';\n// import Messages from '../../Containers/Messages';\n// // Get all user's initial data or redirect back to /login if not logged in\n// // This is all handled in withAuth HOC\n// class Panel extends Component {\n//    componentDidMount() {\n//       isValidToken()\n//          .then(() => {\n//             this.props.setAuthStatus(true);\n//             this.props.fetchInitialData();\n//          })\n//          .catch(() => {\n//             this.props.setAuthStatus(false);\n//          });\n//    }\n//    render() {\n//       if (!this.props.initialDataStatus) {\n//          return <Loader />;\n//       } else {\n//          return (\n//             <Fragment>\n//                <Route path=\"/panel\" component={Navigation} />\n//                <Switch>\n//                   <Route exact path=\"/panel\" component={PanelIntro} />\n//                   <Route path=\"/panel/accounts\" component={Accounts} />\n//                   <Route path=\"/panel/transfers\" component={Receipts} />\n//                   <Route path=\"/panel/cards\" component={Cards} />\n//                   <Route path=\"/panel/profile\" component={Profile} />\n//                   <Route path=\"/panel/change-details\" component={ProfileChangeDetails} />\n//                   <Route path=\"/panel/messages\" component={Messages} />\n//                   <Route component={PageNotFound} />\n//                </Switch>\n//             </Fragment>\n//          );\n//       }\n//    }\n// }\n// const mapStateToProps = state => {\n//    return {\n//       initialDataStatus: state.panel.initialDataStatus\n//    };\n// };\n// const mapDispatchToProps = dispatch => {\n//    return {\n//       setAuthStatus: status => dispatch(Actions.setAuthStatus(status)),\n//       fetchInitialData: () => dispatch(Actions.fetchInitialData())\n//    };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(withAuth(Panel));","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/Containers/Panel/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component, Fragment } from 'react';\n// import { Route, Switch } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import * as Actions from '../../Store/Actions';\n// import withAuth from '../../Hoc/WithAuth';\n\n// import { isValidToken } from '../../Tools';\n\n// import Loader from '../../Components/UI/Loader';\n\n// import Navigation from '../../Containers/Navigation';\n// import PanelIntro from '../Panel/Intro';\n// import PageNotFound from '../../Components/PageNotFound';\n\n// import Accounts from '../../Containers/Accounts';\n// import Receipts from '../../Containers/Receipts';\n// import Cards from '../../Containers/Cards';\n// import Profile from '../../Containers/Profile';\n// import ProfileChangeDetails from '../../Containers/Profile/ChangeDetails';\n// import Messages from '../../Containers/Messages';\n\n\n// // Get all user's initial data or redirect back to /login if not logged in\n// // This is all handled in withAuth HOC\n// class Panel extends Component {\n//    componentDidMount() {\n//       isValidToken()\n//          .then(() => {\n//             this.props.setAuthStatus(true);\n//             this.props.fetchInitialData();\n//          })\n//          .catch(() => {\n//             this.props.setAuthStatus(false);\n//          });\n//    }\n\n//    render() {\n//       if (!this.props.initialDataStatus) {\n//          return <Loader />;\n//       } else {\n//          return (\n//             <Fragment>\n//                <Route path=\"/panel\" component={Navigation} />\n\n//                <Switch>\n//                   <Route exact path=\"/panel\" component={PanelIntro} />\n//                   <Route path=\"/panel/accounts\" component={Accounts} />\n//                   <Route path=\"/panel/transfers\" component={Receipts} />\n//                   <Route path=\"/panel/cards\" component={Cards} />\n//                   <Route path=\"/panel/profile\" component={Profile} />\n//                   <Route path=\"/panel/change-details\" component={ProfileChangeDetails} />\n//                   <Route path=\"/panel/messages\" component={Messages} />\n//                   <Route component={PageNotFound} />\n//                </Switch>\n//             </Fragment>\n//          );\n//       }\n//    }\n// }\n\n// const mapStateToProps = state => {\n//    return {\n//       initialDataStatus: state.panel.initialDataStatus\n//    };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//    return {\n//       setAuthStatus: status => dispatch(Actions.setAuthStatus(status)),\n//       fetchInitialData: () => dispatch(Actions.fetchInitialData())\n//    };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(withAuth(Panel));\n"]},"metadata":{},"sourceType":"module"}