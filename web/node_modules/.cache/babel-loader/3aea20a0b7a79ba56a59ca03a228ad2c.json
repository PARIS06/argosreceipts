{"ast":null,"code":"// import { getMyMessages, toggleMessageRead, removeMessage } from 'api/messages';\n// import * as actionTypes from './actionTypes';\n// // Fetch messages\n// export const fetchMessages = () => async dispatch => {\n//    try {\n//       // Set status to false on every start, so it can be reusable\n//       dispatch(fetchMessagesStatus(false));\n//       const data = await getMyMessages();\n//       if (!data) {\n//          dispatch(fetchMessagesStatus(false));\n//          return;\n//       }\n//       dispatch({ type: actionTypes.FETCH_MESSAGES, data });\n//    } catch (err) {\n//       dispatch(fetchMessagesStatus(false));\n//    }\n// };\n// export const fetchMessagesStatus = status => ({\n//    type: actionTypes.FETCH_MESSAGES_STATUS,\n//    status\n// });\n// // Toggle message read\n// export const messageToggle = id => async dispatch => {\n//    try {\n//       const message = await toggleMessageRead(id);\n//       if (!message) {\n//          return;\n//       }\n//       dispatch({ type: actionTypes.MESSAGE_TOGGLE, id });\n//    } catch (err) {}\n// };\n// // Remove message\n// export const messageRemove = id => async dispatch => {\n//    try {\n//       const message = await removeMessage(id);\n//       if (!message) {\n//          return;\n//       }\n//       dispatch({ type: actionTypes.MESSAGE_REMOVE, id });\n//    } catch (err) {}\n// };","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/Actions/messages.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["// import { getMyMessages, toggleMessageRead, removeMessage } from 'api/messages';\n// import * as actionTypes from './actionTypes';\n\n// // Fetch messages\n// export const fetchMessages = () => async dispatch => {\n//    try {\n//       // Set status to false on every start, so it can be reusable\n//       dispatch(fetchMessagesStatus(false));\n\n//       const data = await getMyMessages();\n\n//       if (!data) {\n//          dispatch(fetchMessagesStatus(false));\n//          return;\n//       }\n\n//       dispatch({ type: actionTypes.FETCH_MESSAGES, data });\n//    } catch (err) {\n//       dispatch(fetchMessagesStatus(false));\n//    }\n// };\n\n// export const fetchMessagesStatus = status => ({\n//    type: actionTypes.FETCH_MESSAGES_STATUS,\n//    status\n// });\n\n// // Toggle message read\n// export const messageToggle = id => async dispatch => {\n//    try {\n//       const message = await toggleMessageRead(id);\n\n//       if (!message) {\n//          return;\n//       }\n\n//       dispatch({ type: actionTypes.MESSAGE_TOGGLE, id });\n//    } catch (err) {}\n// };\n\n// // Remove message\n// export const messageRemove = id => async dispatch => {\n//    try {\n//       const message = await removeMessage(id);\n\n//       if (!message) {\n//          return;\n//       }\n\n//       dispatch({ type: actionTypes.MESSAGE_REMOVE, id });\n//    } catch (err) {}\n// };\n"]},"metadata":{},"sourceType":"module"}