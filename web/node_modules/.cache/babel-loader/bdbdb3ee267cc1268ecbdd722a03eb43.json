{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/Components/App/index.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../Actions'; // import { updateAPIConfig } from 'api/base';\n\nimport { isValidToken } from 'tools';\nimport Layout from 'hoc/Layout';\nimport Home from '../Containers/Home';\nimport Panel from '../Containers/Panel';\nimport Login from '../../Containers/Authorization/Login';\nimport Register from '../../Containers/Authorization/Register';\nimport Logout from './Components/Authorization/Logout';\nimport PageNotFound from './Components/PageNotFound';\nimport './app.scss';\n\nclass App extends Component {\n  // componentDidMount() {\n  //    isValidToken()\n  //       .then(token => {\n  //          updateAPIConfig({ authToken: token });\n  //          this.props.setAuthStatus(true);\n  //       })\n  //       .catch(() => {\n  //          this.props.setAuthStatus(false);\n  //       });\n  // }\n  render() {\n    return React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/panel\",\n      component: Panel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/logout\",\n      component: Logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/register\",\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: PageNotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuthStatus: status => dispatch(Actions.setAuthStatus(status))\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/Components/App/index.js"],"names":["React","Component","Route","Switch","withRouter","connect","Actions","isValidToken","Layout","Home","Panel","Login","Register","Logout","PageNotFound","App","render","mapDispatchToProps","dispatch","setAuthStatus","status"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,OAA7B;AAEA,OAAOC,MAAP,MAAmB,YAAnB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAOC,KAAP,MAAkB,sCAAlB;AACA,OAAOC,QAAP,MAAqB,yCAArB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,OAAO,YAAP;;AAEA,MAAMC,GAAN,SAAkBd,SAAlB,CAA4B;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAe,EAAAA,MAAM,GAAG;AACN,WACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEN,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,EAGG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEE,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,EAIG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAED,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,EAKG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEH,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,EAMG,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEK,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH,CADH,CADH;AAYF;;AA1BwB;;AA6B5B,MAAMG,kBAAkB,GAAGC,QAAQ,IAAI;AACpC,SAAO;AACJC,IAAAA,aAAa,EAAEC,MAAM,IAAIF,QAAQ,CAACZ,OAAO,CAACa,aAAR,CAAsBC,MAAtB,CAAD;AAD7B,GAAP;AAGF,CAJD;;AAMA,eAAehB,UAAU,CAACC,OAAO,CAAC,IAAD,EAAOY,kBAAP,CAAP,CAAkCF,GAAlC,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../Actions';\n\n// import { updateAPIConfig } from 'api/base';\nimport { isValidToken } from 'tools';\n\nimport Layout from 'hoc/Layout';\n\nimport Home from '../Containers/Home';\nimport Panel from '../Containers/Panel';\n\nimport Login from '../../Containers/Authorization/Login';\nimport Register from '../../Containers/Authorization/Register';\nimport Logout from './Components/Authorization/Logout';\nimport PageNotFound from './Components/PageNotFound';\n\nimport './app.scss';\n\nclass App extends Component {\n\n   // componentDidMount() {\n   //    isValidToken()\n   //       .then(token => {\n   //          updateAPIConfig({ authToken: token });\n   //          this.props.setAuthStatus(true);\n   //       })\n   //       .catch(() => {\n   //          this.props.setAuthStatus(false);\n   //       });\n   // }\n\n   render() {\n      return (\n         <Layout>\n            <Switch>\n               <Route path=\"/panel\" component={Panel} />\n               <Route path=\"/login\" component={Login} />\n               <Route path=\"/logout\" component={Logout} />\n               <Route path=\"/register\" component={Register} />\n               <Route exact path=\"/\" component={Home} />\n               <Route component={PageNotFound} />\n            </Switch>\n         </Layout>\n      );\n   }\n}\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      setAuthStatus: status => dispatch(Actions.setAuthStatus(status))\n   };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}