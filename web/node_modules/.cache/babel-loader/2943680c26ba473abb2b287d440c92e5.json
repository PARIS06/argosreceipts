{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/components/Authorization/Register/MerchantForm.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst styles = theme => ({\n  Logo: {\n    height: \"7em\",\n    padding: \"10px\"\n  },\n  button: { ...theme.typography.logIn,\n    borderRadius: \"40px\",\n    width: \"15em\",\n    \"&:hover\": {\n      backgroundColor: \"theme.palette.primary.light\",\n      color: \"white\"\n    }\n  }\n}); // const classes = useStyles()\n// const theme = useTheme()\n\n\nconst innerForm = props => {\n  const {\n    classes,\n    values,\n    errors,\n    touched,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    handleReset\n  } = props;\n  return React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    style: {\n      maxWidth: \"20em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Company Name\",\n    id: \"name\",\n    type: \"name\",\n    name: \"name\",\n    value: values.name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.email && Boolean(errors.email),\n    style: {\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Email\",\n    id: \"email\",\n    type: \"email\",\n    name: \"email\",\n    value: values.email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.email && Boolean(errors.email),\n    style: {\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Password\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.password && Boolean(errors.password),\n    autoComplete: \"current-password\",\n    style: {\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    style: {\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Button, {\n    component: Link,\n    to: \"/merchants\",\n    className: classes.button,\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Register\"))))));\n};\n\nconst merchantForm = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: ({\n    email,\n    password,\n    user_type\n  }) => {\n    return {\n      email: '',\n      password: '',\n      user_type: 1\n    };\n  },\n  // Add a custom validation function (this can be async too!)\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required('Email is required').email('This is not a valid email'),\n    password: Yup.string().required('Password is required').min(8, 'Your password has to be at least 8 characters')\n  }),\n  // Submission handler\n  handleSubmit: (values, {\n    props,\n    setStatus\n  }) => {\n    props.onRegisterSubmit(values.email, values.password, values.user_type);\n  }\n})(innerForm);\nexport default withStyles(styles)(merchantForm);","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/components/Authorization/Register/MerchantForm.js"],"names":["React","useState","Link","withStyles","useTheme","Grid","Button","TextField","withFormik","Yup","styles","theme","Logo","height","padding","button","typography","logIn","borderRadius","width","backgroundColor","color","innerForm","props","classes","values","errors","touched","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","maxWidth","name","email","Boolean","marginTop","password","merchantForm","mapPropsToValues","user_type","validationSchema","object","shape","string","required","min","setStatus","onRegisterSubmit"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport {  withStyles, useTheme} from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\n\n\n\nconst styles = (theme) => ({\n   Logo: {\n      height: \"7em\",\n      padding: \"10px\",\n    },\n    button: {\n      ...theme.typography.logIn,\n      borderRadius: \"40px\",\n      width: \"15em\",\n      \"&:hover\": {\n        backgroundColor: \"theme.palette.primary.light\",\n        color: \"white\"\n        }  \n    }\n})\n\n// const classes = useStyles()\n// const theme = useTheme()\n\nconst innerForm = props => {\n  \n\n   const { \n      classes,\n      values,  \n      errors, \n      touched,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      handleReset\n     } = props;\n\n\n   return (\n      <Grid container direction=\"row\">\n         <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\">\n            <Grid item>\n               <Grid container direction=\"column\">\n                  <Grid item container direction=\"column\" style={{maxWidth: \"20em\"}}>\n                  <form onSubmit={handleSubmit}>\n                     <Grid item>\n                        <TextField \n                           required\n                           fullWidth\n                           label=\"Company Name\" \n                           id=\"name\"\n                           type=\"name\"\n                           name=\"name\"\n                           value={values.name}\n                           onChange={handleChange}\n                           onBlur={handleBlur}\n                           helperText={touched.email && Boolean(errors.email)}\n                           style={{marginTop: \"2em\"}} \n                        />\n                        </Grid>\n                        <Grid item>\n                           <TextField \n                              required\n                              fullWidth\n                              label=\"Email\" \n                              id=\"email\"\n                              type=\"email\"\n                              name=\"email\"\n                              value={values.email}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              helperText={touched.email && Boolean(errors.email)}\n                              style={{marginTop: \"2em\"}} \n                           />\n                        </Grid>\n                        <Grid item>\n                           <TextField \n                              required\n                              fullWidth\n                              label=\"Password\" \n                              id=\"password\"\n                              name=\"password\"         \n                              type=\"password\"\n                              value={values.password}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              helperText={touched.password && Boolean(errors.password)}\n                              autoComplete=\"current-password\"\n                              style={{marginTop: \"2em\"}}\n                           />\n                        </Grid>\n                     </form>\n                  </Grid>\n                  <Grid item container justify=\"center\" style={{ marginTop: \"2em\" }}>\n                     <Button component={Link} to=\"/merchants\" className={classes.button} variant= \"contained\" color=\"secondary\">Register</Button>\n                  </Grid>\n               </Grid>\n            </Grid>\n         </Grid>\n      </Grid>\n   )\n}\n\nconst merchantForm = withFormik({\n   // Transform outer props into form values\n   mapPropsToValues: ({ \n         email,\n         password ,\n         user_type\n      }) => {\n         return {\n            email: '',\n            password: '',\n            user_type: 1\n         };\n      },\n\n   // Add a custom validation function (this can be async too!)\n   validationSchema: Yup.object().shape({\n      email: Yup.string()\n         .required('Email is required')\n         .email('This is not a valid email'),\n      password: Yup.string()\n         .required('Password is required')\n         .min(8, 'Your password has to be at least 8 characters')\n   }),\n\n   // Submission handler\n   handleSubmit: (values, { props, setStatus }) => {\n      props.onRegisterSubmit(values.email, values.password, values.user_type)\n   }\n})(innerForm);\n\nexport default withStyles(styles)(merchantForm);\n"]},"metadata":{},"sourceType":"module"}