{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/components/Authorization/Login/Form.js\";\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport * as actions from '../../../store/Actions/';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nconst useStyles = makeStyles(theme => ({\n  Logo: {\n    height: \"7em\",\n    padding: \"10px\"\n  },\n  button: { ...theme.typography.logIn,\n    borderRadius: \"40px\",\n    width: \"15em\",\n    \"&:hover\": {\n      backgroundColor: \"theme.palette.primary.light\",\n      color: \"white\"\n    }\n  }\n})); // const theme = useTheme()\n\nconst innerForm = props => {\n  const {\n    classes,\n    errors,\n    touched,\n    isSubmitting,\n    handleChange,\n    handleBur,\n    handleSubmit,\n    handleReset\n  } = props;\n  return React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"center\",\n    color: \"primary\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Log In\")), React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    style: {\n      maxWidth: \"20em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Email\",\n    id: \"email\",\n    type: \"email\",\n    name: \"email\",\n    style: {\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), touched.email && errors.email ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, errors.email) : null, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Password\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    style: {\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), touched.password && errors.password ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, errors.password) : null, React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    style: {\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Log in\"))))))));\n};\n\nconst LoginForm = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: props => ({\n    email: '',\n    password: ''\n  }),\n  // Add a custom validation function (this can be async too!)\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required('Email is required').email('This is not a valid email'),\n    password: Yup.string().required('Password is required').min(6, 'Your password has to be at least 6 characters')\n  }),\n  // Submission handler\n  handleSubmit: (values, {\n    props,\n    setStatus\n  }) => {\n    props.onLoginSubmit(values.email, values.password);\n  }\n})(innerForm);\nexport default LoginForm;","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/components/Authorization/Login/Form.js"],"names":["React","makeStyles","useTheme","Grid","Typography","Button","TextField","actions","withFormik","Yup","useStyles","theme","Logo","height","padding","button","typography","logIn","borderRadius","width","backgroundColor","color","innerForm","props","classes","errors","touched","isSubmitting","handleChange","handleBur","handleSubmit","handleReset","maxWidth","marginTop","email","password","LoginForm","mapPropsToValues","validationSchema","object","shape","string","required","min","values","setStatus","onLoginSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme} from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport * as actions from '../../../store/Actions/';\n\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\n\n\nconst useStyles = makeStyles(theme => ({\n   Logo: {\n      height: \"7em\",\n      padding: \"10px\",\n    },\n    button: {\n      ...theme.typography.logIn,\n      borderRadius: \"40px\",\n      width: \"15em\",\n      \"&:hover\": {\n        backgroundColor: \"theme.palette.primary.light\",\n        color: \"white\"\n        }  \n    }\n}))\n\n\n   // const theme = useTheme()\n\n\nconst innerForm = props => {\n   \n\n   const { classes,\n           errors, \n           touched,\n           isSubmitting,\n           handleChange,\n           handleBur,\n           handleSubmit,\n           handleReset\n          } = props;\n\n   return (\n      <Grid container direction=\"row\">\n         <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\">\n            <Grid item>\n               <Grid container direction=\"column\">\n                  <Grid item>\n                     <Typography align=\"center\" color=\"primary\" variant=\"h4\">Log In</Typography>\n                  </Grid>\n                  <Grid item container direction=\"column\" style={{maxWidth: \"20em\"}}>\n                     {/* <Formik \n                        initialValues= {{email: '', password: ''}}\n                        validationSchema={Yup.object({\n                           email: Yup.string()\n                              .email('Please enter a valid email address')\n                              .required('Required')\n                        })}\n                        onSubmit={ (values, { setSubmitting }) => {\n                           setTimeout(() => {\n                              alert(JSON.stringify(values, null, 2));\n                              setSubmitting(false);\n                           }, 400);     \n                        }}\n                     > */}\n                     {/* {formik => (  */}\n                     <form>\n                        <Grid item>\n                           <TextField \n                              required\n                              fullWidth\n                              label=\"Email\" \n                              id=\"email\"\n                              type=\"email\"\n                              name=\"email\"\n                              style={{marginTop: \"2em\"}} \n                           />\n                        </Grid>\n                        {touched.email && errors.email ? (<div>{errors.email}</div>) : null}\n                        <Grid item>\n                           <TextField \n                              required\n                              fullWidth\n                              label=\"Password\" \n                              id=\"password\"\n                              name=\"password\"         \n                              type=\"password\"\n                              autoComplete=\"current-password\"\n                              style={{marginTop: \"2em\"}}\n                           />\n                        </Grid>\n                        {touched.password && errors.password ? (<div>{errors.password}</div>) : null}\n                        <Grid item container justify=\"center\" style={{ marginTop: \"2em\" }}>\n                           <Button \n                              className={classes.button}\n                              variant= \"contained\" \n                              type=\"submit\" \n                              color=\"secondary\">\n                                 Log in\n                           </Button>\n                        </Grid>\n                     </ form>\n                     {/* )} */}\n                     {/* </Formik> */}\n                  </Grid>\n               </Grid>\n            </Grid>\n         </Grid>\n      </Grid>\n   )\n};\n\nconst LoginForm = withFormik({\n   // Transform outer props into form values\n   mapPropsToValues: props => ({ email: '', password: '' }),\n\n   // Add a custom validation function (this can be async too!)\n   validationSchema: Yup.object().shape({\n      email: Yup.string()\n         .required('Email is required')\n         .email('This is not a valid email'),\n      password: Yup.string()\n         .required('Password is required')\n         .min(6, 'Your password has to be at least 6 characters')\n   }),\n\n   // Submission handler\n   handleSubmit: (values, { props, setStatus }) => {\n      props.onLoginSubmit(values.email, values.password);\n   }\n})(innerForm);\n\nexport default LoginForm;\n\n\n\n"]},"metadata":{},"sourceType":"module"}