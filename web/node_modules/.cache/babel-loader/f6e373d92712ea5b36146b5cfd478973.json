{"ast":null,"code":"// import { updateAPIConfig } from '../Api/base';\n// import { loginUser, registerUser } from '../Api/auth';\nimport * as actionTypes from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = authData => {\n  return {\n    type: actionTypes.AUTH_SUCCESS\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const register = (firstName, lastName, email, password, user_type) => {\n  return dispatch => {\n    dispatch(authStart());\n  };\n}; // Tools\n\nimport { setAuthToken } from '../Tools';\nexport const setAuthStatus = (status, email = null) => ({\n  type: actionTypes.SET_AUTH_STATUS,\n  status,\n  email\n}); // Login\n\nexport const login = data => async dispatch => {\n  try {\n    const token = await loginUser(data);\n\n    if (!token) {\n      dispatch(setAuthStatus(false));\n      return;\n    }\n\n    setAuthToken(token);\n    updateAPIConfig({\n      authToken: token\n    });\n    dispatch(setAuthStatus(true));\n  } catch (err) {\n    dispatch(setAuthStatus(false));\n  }\n}; // // Register\n// export const register = data => async dispatch => {\n//    try {\n//       const user = await registerUser(data);\n//       if (!user) {\n//          dispatch(setAuthStatus(false));\n//          return;\n//       }\n//       dispatch(setAuthStatus(true));\n//    } catch (err) {\n//       dispatch(setAuthStatus(false));\n//    }\n// };","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/Store/Actions/auth.js"],"names":["actionTypes","authStart","type","AUTH_START","authSuccess","authData","AUTH_SUCCESS","authFail","error","AUTH_FAIL","register","firstName","lastName","email","password","user_type","dispatch","setAuthToken","setAuthStatus","status","SET_AUTH_STATUS","login","data","token","loginUser","updateAPIConfig","authToken","err"],"mappings":"AAAA;AACA;AACA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC5B,SAAO;AACJC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AADd,GAAP;AAGF,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc;AACtC,SAAO;AACJH,IAAAA,IAAI,EAAEF,WAAW,CAACM;AADd,GAAP;AAGF,CAJM;AAMP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAChC,SAAO;AACJN,IAAAA,IAAI,EAAEF,WAAW,CAACS,SADd;AAEJD,IAAAA,KAAK,EAAEA;AAFH,GAAP;AAIF,CALM;AAOP,OAAO,MAAME,QAAQ,GAAG,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,KAAtB,EAA6BC,QAA7B,EAAuCC,SAAvC,KAAqD;AAC1E,SAAOC,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACF,GAFD;AAGF,CAJM,C,CAQP;;AACA,SAASgB,YAAT,QAA6B,UAA7B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,MAAD,EAASN,KAAK,GAAG,IAAjB,MAA2B;AACrDX,EAAAA,IAAI,EAAEF,WAAW,CAACoB,eADmC;AAErDD,EAAAA,MAFqD;AAGrDN,EAAAA;AAHqD,CAA3B,CAAtB,C,CAMP;;AACA,OAAO,MAAMQ,KAAK,GAAGC,IAAI,IAAI,MAAMN,QAAN,IAAkB;AAC5C,MAAI;AACD,UAAMO,KAAK,GAAG,MAAMC,SAAS,CAACF,IAAD,CAA7B;;AAEA,QAAI,CAACC,KAAL,EAAY;AACTP,MAAAA,QAAQ,CAACE,aAAa,CAAC,KAAD,CAAd,CAAR;AACA;AACF;;AAEDD,IAAAA,YAAY,CAACM,KAAD,CAAZ;AACAE,IAAAA,eAAe,CAAC;AAAEC,MAAAA,SAAS,EAAEH;AAAb,KAAD,CAAf;AACAP,IAAAA,QAAQ,CAACE,aAAa,CAAC,IAAD,CAAd,CAAR;AACF,GAXD,CAWE,OAAOS,GAAP,EAAY;AACXX,IAAAA,QAAQ,CAACE,aAAa,CAAC,KAAD,CAAd,CAAR;AACF;AACH,CAfM,C,CAiBP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import { updateAPIConfig } from '../Api/base';\n// import { loginUser, registerUser } from '../Api/auth';\nimport * as actionTypes from './actionTypes';\n\n\nexport const authStart = () => {\n   return {\n      type: actionTypes.AUTH_START\n   }\n}\n\nexport const authSuccess = (authData) => {\n   return {\n      type: actionTypes.AUTH_SUCCESS\n   }\n}\n\nexport const authFail = (error) => {\n   return {\n      type: actionTypes.AUTH_FAIL,\n      error: error\n   }\n}\n\nexport const register = (firstName, lastName, email, password, user_type) => {\n   return dispatch => {\n      dispatch(authStart());\n   };\n}\n\n\n\n// Tools\nimport { setAuthToken } from '../Tools';\n\nexport const setAuthStatus = (status, email = null) => ({\n   type: actionTypes.SET_AUTH_STATUS,\n   status,\n   email\n});\n\n// Login\nexport const login = data => async dispatch => {\n   try {\n      const token = await loginUser(data);\n\n      if (!token) {\n         dispatch(setAuthStatus(false));\n         return;\n      }\n\n      setAuthToken(token);\n      updateAPIConfig({ authToken: token });\n      dispatch(setAuthStatus(true));\n   } catch (err) {\n      dispatch(setAuthStatus(false));\n   }\n};\n\n// // Register\n// export const register = data => async dispatch => {\n//    try {\n//       const user = await registerUser(data);\n\n//       if (!user) {\n//          dispatch(setAuthStatus(false));\n//          return;\n//       }\n\n//       dispatch(setAuthStatus(true));\n//    } catch (err) {\n//       dispatch(setAuthStatus(false));\n//    }\n// };\n"]},"metadata":{},"sourceType":"module"}