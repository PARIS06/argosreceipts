{"ast":null,"code":"import { updateAPIConfig } from '../../api/base';\nimport { loginUser, registerUser } from '../../api/auth';\nimport * as actionTypes from './actionTypes'; // Tools\n\nimport { setAuthToken } from '../../utils/tools';\nexport const setAuthStatus = (status, email = null) => ({\n  type: actionTypes.SET_AUTH_STATUS,\n  status,\n  email\n}); // Login\n\nexport const login = data => async dispatch => {\n  try {\n    const token = await loginUser(data);\n    console.log(token);\n\n    if (!token) {\n      dispatch(setAuthStatus(false));\n      return;\n    }\n\n    setAuthToken(token);\n    updateAPIConfig({\n      authToken: token\n    });\n    dispatch(setAuthStatus(true));\n  } catch (err) {\n    dispatch(setAuthStatus(false));\n  }\n}; // Register\n\nexport const register = data => async dispatch => {\n  try {\n    const user = await registerUser(data);\n    console.log(user);\n\n    if (!user) {\n      dispatch(setAuthStatus(false));\n      return;\n    }\n\n    dispatch(setAuthStatus(true));\n  } catch (err) {\n    dispatch(setAuthStatus(false));\n  }\n};","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/store/Actions/auth.js"],"names":["updateAPIConfig","loginUser","registerUser","actionTypes","setAuthToken","setAuthStatus","status","email","type","SET_AUTH_STATUS","login","data","dispatch","token","console","log","authToken","err","register","user"],"mappings":"AAAA,SAASA,eAAT,QAAgC,gBAAhC;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,gBAAxC;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B,C,CAEA;;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,MAAD,EAASC,KAAK,GAAG,IAAjB,MAA2B;AACrDC,EAAAA,IAAI,EAAEL,WAAW,CAACM,eADmC;AAErDH,EAAAA,MAFqD;AAGrDC,EAAAA;AAHqD,CAA3B,CAAtB,C,CAMP;;AACA,OAAO,MAAMG,KAAK,GAAGC,IAAI,IAAI,MAAMC,QAAN,IAAkB;AAC5C,MAAI;AACD,UAAMC,KAAK,GAAG,MAAMZ,SAAS,CAACU,IAAD,CAA7B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,QAAI,CAACA,KAAL,EAAY;AACTD,MAAAA,QAAQ,CAACP,aAAa,CAAC,KAAD,CAAd,CAAR;AACA;AACF;;AAEDD,IAAAA,YAAY,CAACS,KAAD,CAAZ;AACAb,IAAAA,eAAe,CAAC;AAAEgB,MAAAA,SAAS,EAAEH;AAAb,KAAD,CAAf;AACAD,IAAAA,QAAQ,CAACP,aAAa,CAAC,IAAD,CAAd,CAAR;AACF,GAXD,CAWE,OAAOY,GAAP,EAAY;AACXL,IAAAA,QAAQ,CAACP,aAAa,CAAC,KAAD,CAAd,CAAR;AACF;AACH,CAfM,C,CAiBP;;AACA,OAAO,MAAMa,QAAQ,GAAGP,IAAI,IAAI,MAAMC,QAAN,IAAkB;AAC/C,MAAI;AACD,UAAMO,IAAI,GAAG,MAAMjB,YAAY,CAACS,IAAD,CAA/B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;;AACA,QAAI,CAACA,IAAL,EAAW;AACRP,MAAAA,QAAQ,CAACP,aAAa,CAAC,KAAD,CAAd,CAAR;AACA;AACF;;AAEDO,IAAAA,QAAQ,CAACP,aAAa,CAAC,IAAD,CAAd,CAAR;AACF,GATD,CASE,OAAOY,GAAP,EAAY;AACXL,IAAAA,QAAQ,CAACP,aAAa,CAAC,KAAD,CAAd,CAAR;AACF;AACH,CAbM","sourcesContent":["import { updateAPIConfig } from '../../api/base';\nimport { loginUser, registerUser } from '../../api/auth';\nimport * as actionTypes from './actionTypes';\n\n// Tools\nimport { setAuthToken } from '../../utils/tools';\n\nexport const setAuthStatus = (status, email = null) => ({\n   type: actionTypes.SET_AUTH_STATUS,\n   status,\n   email\n});\n\n// Login\nexport const login = data => async dispatch => {\n   try {\n      const token = await loginUser(data);\n      console.log(token);\n      if (!token) {\n         dispatch(setAuthStatus(false));\n         return;\n      }\n\n      setAuthToken(token);\n      updateAPIConfig({ authToken: token });\n      dispatch(setAuthStatus(true));\n   } catch (err) {\n      dispatch(setAuthStatus(false));\n   }\n};\n\n// Register\nexport const register = data => async dispatch => {\n   try {\n      const user = await registerUser(data);\n      console.log(user);\n      if (!user) {\n         dispatch(setAuthStatus(false));\n         return;\n      }\n\n      dispatch(setAuthStatus(true));\n   } catch (err) {\n      dispatch(setAuthStatus(false));\n   }\n};\n"]},"metadata":{},"sourceType":"module"}