{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/components/App/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport * as Actions from '../../store/Actions';\nimport withAuth from '../../hoc/WithAuth'; // import { isValidToken } from '../../Tools';\n\nimport Loader from '../UI/Loader';\nimport Layout from '../../hoc/Layout';\nimport Navigation from '../../containers/Navigation';\nimport PanelIntro from '../../containers/Panel/Intro';\nimport PageNotFound from '../PageNotFound';\nimport Accounts from '../../containers/Accounts';\nimport Receipts from '../../containers/Receipts';\nimport Cards from '../../containers/Cards';\nimport Profile from '../../containers/Profile';\nimport ProfileChangeDetails from '../../containers/Profile/ChangeDetails';\nimport Messages from '../../containers/Messages';\nimport { card } from '../../utils/Dummydata';\nimport './app.scss'; // Get all user's initial data or redirect back to /login if not logged in\n// This is all handled in withAuth HOC\n\nclass App extends Component {\n  //    componentDidMount() {\n  //       isValidToken()\n  //          .then(() => {\n  //             this.props.setAuthStatus(true);\n  //             this.props.fetchInitialData();\n  //          })\n  //          .catch(() => {\n  //             this.props.setAuthStatus(false);\n  //          });\n  //    }\n  render() {\n    //   if (!this.props.initialDataStatus) {\n    //      return <Loader />;\n    //   } else {\n    return React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/panel\",\n      component: Navigation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/panel\",\n      component: PanelIntro,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel/accounts\",\n      component: Accounts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel/receipts\",\n      component: Receipts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel/cards\",\n      component: Cards,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel/profile\",\n      component: Profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel/change-details\",\n      component: ProfileChangeDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel/messages\",\n      component: Messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: PageNotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App; // const mapDispatchToProps = dispatch => {\n//    return {\n//       setAuthStatus: status => dispatch(Actions.setAuthStatus(status))\n//    };\n// };\n// export default withRouter(connect(null, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/components/App/index.js"],"names":["React","Component","Fragment","Route","Switch","Actions","withAuth","Loader","Layout","Navigation","PanelIntro","PageNotFound","Accounts","Receipts","Cards","Profile","ProfileChangeDetails","Messages","card","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,QAAP,MAAqB,oBAArB,C,CAEA;;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,oBAAP,MAAiC,wCAAjC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,SAASC,IAAT,QAAqB,uBAArB;AAEA,OAAO,YAAP,C,CAGA;AACA;;AACA,MAAMC,GAAN,SAAkBlB,SAAlB,CAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEGmB,EAAAA,MAAM,GAAG;AACR;AACA;AACA;AACK,WACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEX,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAGG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAA8B,MAAA,SAAS,EAAEE,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,EAGG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAA8B,MAAA,SAAS,EAAEC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,EAIG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,cAAZ;AAA2B,MAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,EAKG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,gBAAZ;AAA6B,MAAA,SAAS,EAAEC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,EAMG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,uBAAZ;AAAoC,MAAA,SAAS,EAAEC,oBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH,EAOG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAA8B,MAAA,SAAS,EAAEC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPH,EAQG,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEN,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARH,CAHH,CADA,CADH;AAkBL;;AAlCwB;;AAqC5B,eAAeQ,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport * as Actions from '../../store/Actions';\nimport withAuth from '../../hoc/WithAuth';\n\n// import { isValidToken } from '../../Tools';\n\nimport Loader from '../UI/Loader';\n\nimport Layout from '../../hoc/Layout';\n\nimport Navigation from '../../containers/Navigation';\nimport PanelIntro from '../../containers/Panel/Intro';\nimport PageNotFound from '../PageNotFound';\n\nimport Accounts from '../../containers/Accounts';\nimport Receipts from '../../containers/Receipts';\nimport Cards from '../../containers/Cards';\nimport Profile from '../../containers/Profile';\nimport ProfileChangeDetails from '../../containers/Profile/ChangeDetails';\nimport Messages from '../../containers/Messages';\n\nimport { card } from '../../utils/Dummydata'; \n\nimport './app.scss';\n\n\n// Get all user's initial data or redirect back to /login if not logged in\n// This is all handled in withAuth HOC\nclass App extends Component {\n//    componentDidMount() {\n//       isValidToken()\n//          .then(() => {\n//             this.props.setAuthStatus(true);\n//             this.props.fetchInitialData();\n//          })\n//          .catch(() => {\n//             this.props.setAuthStatus(false);\n//          });\n//    }\n\n   render() {\n    //   if (!this.props.initialDataStatus) {\n    //      return <Loader />;\n    //   } else {\n         return (\n            <Layout>\n            <Fragment>\n               <Route path=\"/panel\" component={Navigation} />\n\n               <Switch>\n                  <Route exact path=\"/panel\" component={PanelIntro} />\n                  <Route path=\"/panel/accounts\" component={Accounts} />\n                  <Route path=\"/panel/receipts\" component={Receipts} />\n                  <Route path=\"/panel/cards\" component={Cards} />\n                  <Route path=\"/panel/profile\" component={Profile} />\n                  <Route path=\"/panel/change-details\" component={ProfileChangeDetails} />\n                  <Route path=\"/panel/messages\" component={Messages} />\n                  <Route component={PageNotFound} />\n               </Switch>\n            </Fragment>\n            </Layout>\n         );\n   }\n}\n\nexport default App;\n\n// const mapDispatchToProps = dispatch => {\n//    return {\n//       setAuthStatus: status => dispatch(Actions.setAuthStatus(status))\n//    };\n// };\n\n// export default withRouter(connect(null, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}