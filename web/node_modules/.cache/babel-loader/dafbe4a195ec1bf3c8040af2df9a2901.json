{"ast":null,"code":"// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import Input from '../../../Components/UI/FormBoxes/Input/Input';\n// import SingleModuleButton from '../../../Components/UI/Buttons/SingleModuleButton';\n// const RegisterForm = (props) => {\n//    <Form className=\"register-form\">\n//       {JSON.stringify(values)}\n//       <div>\n//      <div className=\"form-group\">\n//         <Field \n//          type=\"text\"\n//          name=\"name\"\n//          placeholder=\"Enter your name\"\n//          className=\"form-control login-input\"\n//          onChange={handleChange}\n//          onBlur={handleBlur}\n//          value={values.name}\n//         />\n//         {touched.name && errors.name && \n//             <p className=\"field-invalid\">{errors.name}</p>\n//         }\n//      </div>\n//      <div className=\"form-group\">\n//         <Field \n//          type=\"email\"\n//          name=\"email\"\n//          placeholder=\"Please enter a valid email\"\n//          className=\"form-control login-input\"\n//          onChange={handleChange}\n//          onBlur={handleBlur}\n//          value={values.email}\n//         />\n//         {touched.email && errors.email && \n//             <p className=\"field-invalid\">{errors.email}</p>\n//         }\n//      </div>\n//      <div className=\"form-group\">\n//         <Field \n//          type=\"password\"\n//          name=\"password\"\n//          placeholder=\"Choose a password\"\n//          className=\"form-control password-input\"\n//          onChange={handleChange}\n//          onBlur={handleBlur}\n//          value={values.password}\n//         />\n//         {touched.password && errors.password && (\n//             <p className=\"field-invalid\">{errors.password}</p>\n//          )}\n//      </div>\n//      <div className=\"form-group\">\n//         <select\n//          type=\"select\"\n//          name=\"user_type\"\n//          placeholder=\"Choose an account type\"\n//          className=\"form-control\"\n//          onChange={handleChange}\n//          onBlur={handleBlur}\n//          value={values.user_type}\n//         >\n//            <option value=\"0\">Consumer</option>\n//            <option value=\"1\">Merchant</option>\n//         </select>\n//      </div>\n//      <p>\n//        <Link to=\"/auth/login/\">Already have an account?</Link>\n//       </p>\n//      </div>\n//      <SingleModuleButton text=\"Create your account\" type=\"submit\" />\n//   </Form>\n//    )\n// }\n// Wrap our form with \"using withFormik HoC\"\n// const RegisterForm = withFormik({\n//    // Transform outer props into form values\n//    mapPropsToValues: props => ({ email: '', name: '', password: '', user_type: '' }),\n//    validationSchema: Yup.object().shape({\n//       name: Yup.string()\n//          .min(1, 'Must have a character')\n//          .max(255, 'Must be shorter than 255')\n//          .required('Must enter a name'),\n//       email: Yup.string()\n//          .required('Email is required')\n//          .email('This is not a valid email'),\n//       password: Yup.string()\n//          .required('Password is required')\n//          .min(6, 'Your password has to be at least 6 characters'),\n//       user_type: Yup.string()\n//          .required('You must select a user type')\n//    }),\n//    // Submission handler\n//    handleSubmit: (values, { props, setStatus }) => {\n//       props.onRegisterSubmit(values.email, values.name, values.password, values.user_type);\n//    }\n// })(InnerForm);\n// export default RegisterForm;","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/components/Authorization/Register/Form.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAGA;AAIS;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAET;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import Input from '../../../Components/UI/FormBoxes/Input/Input';\n// import SingleModuleButton from '../../../Components/UI/Buttons/SingleModuleButton';\n\n\n// const RegisterForm = (props) => {\n\n  \n    \n         //    <Form className=\"register-form\">\n         //       {JSON.stringify(values)}\n         //       <div>\n         //      <div className=\"form-group\">\n         //         <Field \n         //          type=\"text\"\n         //          name=\"name\"\n         //          placeholder=\"Enter your name\"\n         //          className=\"form-control login-input\"\n         //          onChange={handleChange}\n         //          onBlur={handleBlur}\n         //          value={values.name}\n         //         />\n         //         {touched.name && errors.name && \n         //             <p className=\"field-invalid\">{errors.name}</p>\n         //         }\n         //      </div>\n         //      <div className=\"form-group\">\n         //         <Field \n         //          type=\"email\"\n         //          name=\"email\"\n         //          placeholder=\"Please enter a valid email\"\n         //          className=\"form-control login-input\"\n         //          onChange={handleChange}\n         //          onBlur={handleBlur}\n         //          value={values.email}\n         //         />\n         //         {touched.email && errors.email && \n         //             <p className=\"field-invalid\">{errors.email}</p>\n         //         }\n         //      </div>\n         //      <div className=\"form-group\">\n         //         <Field \n         //          type=\"password\"\n         //          name=\"password\"\n         //          placeholder=\"Choose a password\"\n         //          className=\"form-control password-input\"\n         //          onChange={handleChange}\n         //          onBlur={handleBlur}\n         //          value={values.password}\n         //         />\n         //         {touched.password && errors.password && (\n         //             <p className=\"field-invalid\">{errors.password}</p>\n         //          )}\n         //      </div>\n         //      <div className=\"form-group\">\n         //         <select\n         //          type=\"select\"\n         //          name=\"user_type\"\n         //          placeholder=\"Choose an account type\"\n         //          className=\"form-control\"\n         //          onChange={handleChange}\n         //          onBlur={handleBlur}\n         //          value={values.user_type}\n         //         >\n         //            <option value=\"0\">Consumer</option>\n         //            <option value=\"1\">Merchant</option>\n         //         </select>\n         //      </div>\n         //      <p>\n         //        <Link to=\"/auth/login/\">Already have an account?</Link>\n         //       </p>\n         //      </div>\n         //      <SingleModuleButton text=\"Create your account\" type=\"submit\" />\n         //   </Form>\n      \n//    )\n// }\n\n// Wrap our form with \"using withFormik HoC\"\n// const RegisterForm = withFormik({\n//    // Transform outer props into form values\n//    mapPropsToValues: props => ({ email: '', name: '', password: '', user_type: '' }),\n\n//    validationSchema: Yup.object().shape({\n//       name: Yup.string()\n//          .min(1, 'Must have a character')\n//          .max(255, 'Must be shorter than 255')\n//          .required('Must enter a name'),\n//       email: Yup.string()\n//          .required('Email is required')\n//          .email('This is not a valid email'),\n//       password: Yup.string()\n//          .required('Password is required')\n//          .min(6, 'Your password has to be at least 6 characters'),\n//       user_type: Yup.string()\n//          .required('You must select a user type')\n//    }),\n\n//    // Submission handler\n//    handleSubmit: (values, { props, setStatus }) => {\n//       props.onRegisterSubmit(values.email, values.name, values.password, values.user_type);\n//    }\n// })(InnerForm);\n\n// export default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}