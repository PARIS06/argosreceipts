{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction charCodeToInt(charCode) {\n  if (charCode > 96) {\n    return charCode - 87;\n  } else if (charCode > 64) {\n    return charCode - 29;\n  }\n\n  return charCode - 48;\n}\n\nfunction unpackBase60(string) {\n  var parts = string.split('.');\n  var whole = parts[0];\n  var fractional = parts[1] || '';\n  var multiplier = 1;\n  var start = 0;\n  var out = 0;\n  var sign = 1; // handle negative numbers\n\n  if (string.charCodeAt(0) === 45) {\n    start = 1;\n    sign = -1;\n  } // handle digits before the decimal\n\n\n  for (var i = start, length = whole.length; i < length; ++i) {\n    var num = charCodeToInt(whole.charCodeAt(i));\n    out = 60 * out + num;\n  } // handle digits after the decimal\n  // istanbul ignore next\n\n\n  for (var _i = 0, _length = fractional.length; _i < _length; ++_i) {\n    var _num = charCodeToInt(fractional.charCodeAt(_i));\n\n    multiplier = multiplier / 60;\n    out += _num * multiplier;\n  }\n\n  return out * sign;\n}\n\nfunction arrayToInt(array) {\n  for (var i = 0, length = array.length; i < length; ++i) {\n    array[i] = unpackBase60(array[i]);\n  }\n}\n\nfunction intToUntil(array, length) {\n  for (var i = 0; i < length; ++i) {\n    array[i] = Math.round((array[i - 1] || 0) + array[i] * 60000);\n  }\n\n  array[length - 1] = Infinity;\n}\n\nfunction mapIndices(source, indices) {\n  var out = [];\n\n  for (var i = 0, length = indices.length; i < length; ++i) {\n    out[i] = source[indices[i]];\n  }\n\n  return out;\n}\n\nfunction unpack(string) {\n  var data = string.split('|');\n  var offsets = data[2].split(' ');\n  var indices = data[3].split('');\n  var untils = data[4].split(' ');\n  arrayToInt(offsets);\n  arrayToInt(indices);\n  arrayToInt(untils);\n  intToUntil(untils, indices.length);\n  var name = data[0];\n  var abbreviations = mapIndices(data[1].split(' '), indices);\n  var population = data[5] | 0;\n  offsets = mapIndices(offsets, indices);\n  return {\n    name: name,\n    abbreviations: abbreviations,\n    offsets: offsets,\n    untils: untils,\n    population: population\n  };\n}\n\nvar zones;\nvar names;\nvar links;\nvar instances;\n\nfunction populateTimeZones(_ref) {\n  var zoneData = _ref.zones,\n      linkData = _ref.links;\n  zones = {};\n  names = zoneData.map(function (packed) {\n    var name = packed.substr(0, packed.indexOf('|'));\n    zones[name] = packed;\n    return name;\n  });\n  links = linkData.reduce(function (result, packed) {\n    var _packed$split = packed.split('|'),\n        name = _packed$split[0],\n        alias = _packed$split[1];\n\n    result[alias] = name;\n    return result;\n  }, {});\n  instances = {};\n}\n\nfunction listTimeZones() {\n  return names.slice();\n}\n\nfunction findTimeZone(alias) {\n  var name = links[alias] || alias;\n  var timeZone = instances[name];\n\n  if (!timeZone) {\n    var packed = zones[name];\n\n    if (!packed) {\n      throw new Error(\"Unknown time zone \\\"\" + name + \"\\\".\");\n    }\n\n    timeZone = instances[name] = unpack(packed);\n  }\n\n  return timeZone;\n}\n\nfunction getUnixTimeFromUTC(_ref) {\n  var year = _ref.year,\n      month = _ref.month,\n      day = _ref.day,\n      hours = _ref.hours,\n      minutes = _ref.minutes,\n      _ref$seconds = _ref.seconds,\n      seconds = _ref$seconds === void 0 ? 0 : _ref$seconds,\n      _ref$milliseconds = _ref.milliseconds,\n      milliseconds = _ref$milliseconds === void 0 ? 0 : _ref$milliseconds;\n  return Date.UTC(year, month - 1, day, hours, minutes, seconds, milliseconds);\n}\n\nfunction getDateFromTime(_ref2) {\n  var year = _ref2.year,\n      month = _ref2.month,\n      day = _ref2.day,\n      hours = _ref2.hours,\n      minutes = _ref2.minutes,\n      _ref2$seconds = _ref2.seconds,\n      seconds = _ref2$seconds === void 0 ? 0 : _ref2$seconds,\n      _ref2$milliseconds = _ref2.milliseconds,\n      milliseconds = _ref2$milliseconds === void 0 ? 0 : _ref2$milliseconds;\n  return new Date(year, month - 1, day, hours, minutes, seconds, milliseconds);\n}\n\nfunction getUTCTime(date) {\n  var year = date.getUTCFullYear();\n  var month = date.getUTCMonth() + 1;\n  var day = date.getUTCDate();\n  var dayOfWeek = date.getUTCDay();\n  var hours = date.getUTCHours();\n  var minutes = date.getUTCMinutes();\n  var seconds = date.getUTCSeconds() || 0;\n  var milliseconds = date.getUTCMilliseconds() || 0;\n  return {\n    year: year,\n    month: month,\n    day: day,\n    dayOfWeek: dayOfWeek,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds,\n    milliseconds: milliseconds\n  };\n}\n\nfunction getLocalTime(date) {\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n  var dayOfWeek = date.getDay();\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var seconds = date.getSeconds() || 0;\n  var milliseconds = date.getMilliseconds() || 0;\n  return {\n    year: year,\n    month: month,\n    day: day,\n    dayOfWeek: dayOfWeek,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds,\n    milliseconds: milliseconds\n  };\n}\n\nfunction getDateTime(date, options) {\n  var _ref3 = options || {},\n      useUTC = _ref3.useUTC;\n\n  var extract;\n\n  if (useUTC === true) {\n    extract = getUTCTime;\n  } else if (useUTC === false) {\n    extract = getLocalTime;\n  } else {\n    throw new Error('Extract local or UTC date? Set useUTC option.');\n  }\n\n  return extract(date);\n}\n\nfunction findTransitionIndex(unixTime, timeZone) {\n  var untils = timeZone.untils;\n\n  for (var i = 0, length = untils.length; i < length; ++i) {\n    if (unixTime < untils[i]) {\n      return i;\n    }\n  }\n}\n\nfunction getTransition(unixTime, timeZone) {\n  var transitionIndex = findTransitionIndex(unixTime, timeZone);\n  var abbreviation = timeZone.abbreviations[transitionIndex];\n  var offset = timeZone.offsets[transitionIndex];\n  return {\n    abbreviation: abbreviation,\n    offset: offset\n  };\n}\n\nfunction attachEpoch(time, unixTime) {\n  Object.defineProperty(time, 'epoch', {\n    value: unixTime\n  });\n}\n\nfunction getUTCOffset(date, timeZone) {\n  var unixTime = typeof date === 'number' ? date : date.getTime();\n\n  var _getTransition = getTransition(unixTime, timeZone),\n      abbreviation = _getTransition.abbreviation,\n      offset = _getTransition.offset;\n\n  return {\n    abbreviation: abbreviation,\n    offset: offset\n  };\n}\n\nfunction getZonedTime(date, timeZone) {\n  var gotUnixTime = typeof date === 'number';\n  var unixTime = gotUnixTime ? date : date.getTime();\n\n  var _getTransition2 = getTransition(unixTime, timeZone),\n      abbreviation = _getTransition2.abbreviation,\n      offset = _getTransition2.offset;\n\n  if (gotUnixTime || offset) {\n    date = new Date(unixTime - offset * 60000);\n  }\n\n  var time = getUTCTime(date);\n  time.zone = {\n    abbreviation: abbreviation,\n    offset: offset\n  };\n  attachEpoch(time, unixTime);\n  return time;\n}\n\nfunction getUnixTime(time, timeZone) {\n  var zone = time.zone,\n      epoch = time.epoch;\n\n  if (epoch) {\n    if (timeZone) {\n      throw new Error('Both epoch and other time zone specified. Omit the other one.');\n    }\n\n    return epoch;\n  }\n\n  var unixTime = getUnixTimeFromUTC(time);\n\n  if (zone) {\n    if (timeZone) {\n      throw new Error('Both own and other time zones specified. Omit the other one.');\n    }\n  } else {\n    if (!timeZone) {\n      throw new Error('Missing other time zone.');\n    }\n\n    zone = getTransition(unixTime, timeZone);\n  }\n\n  return unixTime + zone.offset * 60000;\n}\n\nfunction setTimeZone(time, timeZone, options) {\n  if (time instanceof Date) {\n    time = getDateTime(time, options);\n  } else {\n    var _time = time,\n        year = _time.year,\n        month = _time.month,\n        day = _time.day,\n        hours = _time.hours,\n        minutes = _time.minutes,\n        _time$seconds = _time.seconds,\n        seconds = _time$seconds === void 0 ? 0 : _time$seconds,\n        _time$milliseconds = _time.milliseconds,\n        milliseconds = _time$milliseconds === void 0 ? 0 : _time$milliseconds;\n    time = {\n      year: year,\n      month: month,\n      day: day,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds,\n      milliseconds: milliseconds\n    };\n  }\n\n  var unixTime = getUnixTimeFromUTC(time);\n  var utcDate = new Date(unixTime);\n  time.dayOfWeek = utcDate.getUTCDay();\n\n  var _getTransition3 = getTransition(unixTime, timeZone),\n      abbreviation = _getTransition3.abbreviation,\n      offset = _getTransition3.offset;\n\n  time.zone = {\n    abbreviation: abbreviation,\n    offset: offset\n  };\n  attachEpoch(time, unixTime + offset * 60000);\n  return time;\n}\n\nfunction convertTimeToDate(time) {\n  var epoch = time.epoch;\n\n  if (epoch !== undefined) {\n    return new Date(epoch);\n  }\n\n  var _ref = time.zone || {},\n      offset = _ref.offset;\n\n  if (offset === undefined) {\n    return getDateFromTime(time);\n  }\n\n  var unixTime = getUnixTimeFromUTC(time);\n  return new Date(unixTime + offset * 60000);\n}\n\nfunction convertDateToTime(date) {\n  var time = getLocalTime(date);\n  var match = /\\(([^)]+)\\)$/.exec(date.toTimeString());\n  time.zone = {\n    abbreviation: match ? match[1] // istanbul ignore next\n    : '???',\n    offset: date.getTimezoneOffset()\n  };\n  attachEpoch(time, date.getTime());\n  return time;\n}\n\nexports.populateTimeZones = populateTimeZones;\nexports.listTimeZones = listTimeZones;\nexports.findTimeZone = findTimeZone;\nexports.getUTCOffset = getUTCOffset;\nexports.getZonedTime = getZonedTime;\nexports.getUnixTime = getUnixTime;\nexports.setTimeZone = setTimeZone;\nexports.convertTimeToDate = convertTimeToDate;\nexports.convertDateToTime = convertDateToTime;","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/node_modules/timezone-support/dist/lookup-convert.js"],"names":["Object","defineProperty","exports","value","charCodeToInt","charCode","unpackBase60","string","parts","split","whole","fractional","multiplier","start","out","sign","charCodeAt","i","length","num","_i","_length","_num","arrayToInt","array","intToUntil","Math","round","Infinity","mapIndices","source","indices","unpack","data","offsets","untils","name","abbreviations","population","zones","names","links","instances","populateTimeZones","_ref","zoneData","linkData","map","packed","substr","indexOf","reduce","result","_packed$split","alias","listTimeZones","slice","findTimeZone","timeZone","Error","getUnixTimeFromUTC","year","month","day","hours","minutes","_ref$seconds","seconds","_ref$milliseconds","milliseconds","Date","UTC","getDateFromTime","_ref2","_ref2$seconds","_ref2$milliseconds","getUTCTime","date","getUTCFullYear","getUTCMonth","getUTCDate","dayOfWeek","getUTCDay","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getLocalTime","getFullYear","getMonth","getDate","getDay","getHours","getMinutes","getSeconds","getMilliseconds","getDateTime","options","_ref3","useUTC","extract","findTransitionIndex","unixTime","getTransition","transitionIndex","abbreviation","offset","attachEpoch","time","getUTCOffset","getTime","_getTransition","getZonedTime","gotUnixTime","_getTransition2","zone","getUnixTime","epoch","setTimeZone","_time","_time$seconds","_time$milliseconds","utcDate","_getTransition3","convertTimeToDate","undefined","convertDateToTime","match","exec","toTimeString","getTimezoneOffset"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction charCodeToInt(charCode) {\n  if (charCode > 96) {\n    return charCode - 87;\n  } else if (charCode > 64) {\n    return charCode - 29;\n  }\n\n  return charCode - 48;\n}\n\nfunction unpackBase60(string) {\n  var parts = string.split('.');\n  var whole = parts[0];\n  var fractional = parts[1] || '';\n  var multiplier = 1;\n  var start = 0;\n  var out = 0;\n  var sign = 1; // handle negative numbers\n\n  if (string.charCodeAt(0) === 45) {\n    start = 1;\n    sign = -1;\n  } // handle digits before the decimal\n\n\n  for (var i = start, length = whole.length; i < length; ++i) {\n    var num = charCodeToInt(whole.charCodeAt(i));\n    out = 60 * out + num;\n  } // handle digits after the decimal\n  // istanbul ignore next\n\n\n  for (var _i = 0, _length = fractional.length; _i < _length; ++_i) {\n    var _num = charCodeToInt(fractional.charCodeAt(_i));\n\n    multiplier = multiplier / 60;\n    out += _num * multiplier;\n  }\n\n  return out * sign;\n}\n\nfunction arrayToInt(array) {\n  for (var i = 0, length = array.length; i < length; ++i) {\n    array[i] = unpackBase60(array[i]);\n  }\n}\n\nfunction intToUntil(array, length) {\n  for (var i = 0; i < length; ++i) {\n    array[i] = Math.round((array[i - 1] || 0) + array[i] * 60000);\n  }\n\n  array[length - 1] = Infinity;\n}\n\nfunction mapIndices(source, indices) {\n  var out = [];\n\n  for (var i = 0, length = indices.length; i < length; ++i) {\n    out[i] = source[indices[i]];\n  }\n\n  return out;\n}\n\nfunction unpack(string) {\n  var data = string.split('|');\n  var offsets = data[2].split(' ');\n  var indices = data[3].split('');\n  var untils = data[4].split(' ');\n  arrayToInt(offsets);\n  arrayToInt(indices);\n  arrayToInt(untils);\n  intToUntil(untils, indices.length);\n  var name = data[0];\n  var abbreviations = mapIndices(data[1].split(' '), indices);\n  var population = data[5] | 0;\n  offsets = mapIndices(offsets, indices);\n  return {\n    name: name,\n    abbreviations: abbreviations,\n    offsets: offsets,\n    untils: untils,\n    population: population\n  };\n}\n\nvar zones;\nvar names;\nvar links;\nvar instances;\n\nfunction populateTimeZones(_ref) {\n  var zoneData = _ref.zones,\n      linkData = _ref.links;\n  zones = {};\n  names = zoneData.map(function (packed) {\n    var name = packed.substr(0, packed.indexOf('|'));\n    zones[name] = packed;\n    return name;\n  });\n  links = linkData.reduce(function (result, packed) {\n    var _packed$split = packed.split('|'),\n        name = _packed$split[0],\n        alias = _packed$split[1];\n\n    result[alias] = name;\n    return result;\n  }, {});\n  instances = {};\n}\n\nfunction listTimeZones() {\n  return names.slice();\n}\n\nfunction findTimeZone(alias) {\n  var name = links[alias] || alias;\n  var timeZone = instances[name];\n\n  if (!timeZone) {\n    var packed = zones[name];\n\n    if (!packed) {\n      throw new Error(\"Unknown time zone \\\"\" + name + \"\\\".\");\n    }\n\n    timeZone = instances[name] = unpack(packed);\n  }\n\n  return timeZone;\n}\n\nfunction getUnixTimeFromUTC(_ref) {\n  var year = _ref.year,\n      month = _ref.month,\n      day = _ref.day,\n      hours = _ref.hours,\n      minutes = _ref.minutes,\n      _ref$seconds = _ref.seconds,\n      seconds = _ref$seconds === void 0 ? 0 : _ref$seconds,\n      _ref$milliseconds = _ref.milliseconds,\n      milliseconds = _ref$milliseconds === void 0 ? 0 : _ref$milliseconds;\n  return Date.UTC(year, month - 1, day, hours, minutes, seconds, milliseconds);\n}\n\nfunction getDateFromTime(_ref2) {\n  var year = _ref2.year,\n      month = _ref2.month,\n      day = _ref2.day,\n      hours = _ref2.hours,\n      minutes = _ref2.minutes,\n      _ref2$seconds = _ref2.seconds,\n      seconds = _ref2$seconds === void 0 ? 0 : _ref2$seconds,\n      _ref2$milliseconds = _ref2.milliseconds,\n      milliseconds = _ref2$milliseconds === void 0 ? 0 : _ref2$milliseconds;\n  return new Date(year, month - 1, day, hours, minutes, seconds, milliseconds);\n}\n\nfunction getUTCTime(date) {\n  var year = date.getUTCFullYear();\n  var month = date.getUTCMonth() + 1;\n  var day = date.getUTCDate();\n  var dayOfWeek = date.getUTCDay();\n  var hours = date.getUTCHours();\n  var minutes = date.getUTCMinutes();\n  var seconds = date.getUTCSeconds() || 0;\n  var milliseconds = date.getUTCMilliseconds() || 0;\n  return {\n    year: year,\n    month: month,\n    day: day,\n    dayOfWeek: dayOfWeek,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds,\n    milliseconds: milliseconds\n  };\n}\n\nfunction getLocalTime(date) {\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n  var dayOfWeek = date.getDay();\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var seconds = date.getSeconds() || 0;\n  var milliseconds = date.getMilliseconds() || 0;\n  return {\n    year: year,\n    month: month,\n    day: day,\n    dayOfWeek: dayOfWeek,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds,\n    milliseconds: milliseconds\n  };\n}\n\nfunction getDateTime(date, options) {\n  var _ref3 = options || {},\n      useUTC = _ref3.useUTC;\n\n  var extract;\n\n  if (useUTC === true) {\n    extract = getUTCTime;\n  } else if (useUTC === false) {\n    extract = getLocalTime;\n  } else {\n    throw new Error('Extract local or UTC date? Set useUTC option.');\n  }\n\n  return extract(date);\n}\n\nfunction findTransitionIndex(unixTime, timeZone) {\n  var untils = timeZone.untils;\n\n  for (var i = 0, length = untils.length; i < length; ++i) {\n    if (unixTime < untils[i]) {\n      return i;\n    }\n  }\n}\n\nfunction getTransition(unixTime, timeZone) {\n  var transitionIndex = findTransitionIndex(unixTime, timeZone);\n  var abbreviation = timeZone.abbreviations[transitionIndex];\n  var offset = timeZone.offsets[transitionIndex];\n  return {\n    abbreviation: abbreviation,\n    offset: offset\n  };\n}\n\nfunction attachEpoch(time, unixTime) {\n  Object.defineProperty(time, 'epoch', {\n    value: unixTime\n  });\n}\n\nfunction getUTCOffset(date, timeZone) {\n  var unixTime = typeof date === 'number' ? date : date.getTime();\n\n  var _getTransition = getTransition(unixTime, timeZone),\n      abbreviation = _getTransition.abbreviation,\n      offset = _getTransition.offset;\n\n  return {\n    abbreviation: abbreviation,\n    offset: offset\n  };\n}\n\nfunction getZonedTime(date, timeZone) {\n  var gotUnixTime = typeof date === 'number';\n  var unixTime = gotUnixTime ? date : date.getTime();\n\n  var _getTransition2 = getTransition(unixTime, timeZone),\n      abbreviation = _getTransition2.abbreviation,\n      offset = _getTransition2.offset;\n\n  if (gotUnixTime || offset) {\n    date = new Date(unixTime - offset * 60000);\n  }\n\n  var time = getUTCTime(date);\n  time.zone = {\n    abbreviation: abbreviation,\n    offset: offset\n  };\n  attachEpoch(time, unixTime);\n  return time;\n}\n\nfunction getUnixTime(time, timeZone) {\n  var zone = time.zone,\n      epoch = time.epoch;\n\n  if (epoch) {\n    if (timeZone) {\n      throw new Error('Both epoch and other time zone specified. Omit the other one.');\n    }\n\n    return epoch;\n  }\n\n  var unixTime = getUnixTimeFromUTC(time);\n\n  if (zone) {\n    if (timeZone) {\n      throw new Error('Both own and other time zones specified. Omit the other one.');\n    }\n  } else {\n    if (!timeZone) {\n      throw new Error('Missing other time zone.');\n    }\n\n    zone = getTransition(unixTime, timeZone);\n  }\n\n  return unixTime + zone.offset * 60000;\n}\n\nfunction setTimeZone(time, timeZone, options) {\n  if (time instanceof Date) {\n    time = getDateTime(time, options);\n  } else {\n    var _time = time,\n        year = _time.year,\n        month = _time.month,\n        day = _time.day,\n        hours = _time.hours,\n        minutes = _time.minutes,\n        _time$seconds = _time.seconds,\n        seconds = _time$seconds === void 0 ? 0 : _time$seconds,\n        _time$milliseconds = _time.milliseconds,\n        milliseconds = _time$milliseconds === void 0 ? 0 : _time$milliseconds;\n    time = {\n      year: year,\n      month: month,\n      day: day,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds,\n      milliseconds: milliseconds\n    };\n  }\n\n  var unixTime = getUnixTimeFromUTC(time);\n  var utcDate = new Date(unixTime);\n  time.dayOfWeek = utcDate.getUTCDay();\n\n  var _getTransition3 = getTransition(unixTime, timeZone),\n      abbreviation = _getTransition3.abbreviation,\n      offset = _getTransition3.offset;\n\n  time.zone = {\n    abbreviation: abbreviation,\n    offset: offset\n  };\n  attachEpoch(time, unixTime + offset * 60000);\n  return time;\n}\n\nfunction convertTimeToDate(time) {\n  var epoch = time.epoch;\n\n  if (epoch !== undefined) {\n    return new Date(epoch);\n  }\n\n  var _ref = time.zone || {},\n      offset = _ref.offset;\n\n  if (offset === undefined) {\n    return getDateFromTime(time);\n  }\n\n  var unixTime = getUnixTimeFromUTC(time);\n  return new Date(unixTime + offset * 60000);\n}\n\nfunction convertDateToTime(date) {\n  var time = getLocalTime(date);\n  var match = /\\(([^)]+)\\)$/.exec(date.toTimeString());\n  time.zone = {\n    abbreviation: match ? match[1] // istanbul ignore next\n    : '???',\n    offset: date.getTimezoneOffset()\n  };\n  attachEpoch(time, date.getTime());\n  return time;\n}\n\nexports.populateTimeZones = populateTimeZones;\nexports.listTimeZones = listTimeZones;\nexports.findTimeZone = findTimeZone;\nexports.getUTCOffset = getUTCOffset;\nexports.getZonedTime = getZonedTime;\nexports.getUnixTime = getUnixTime;\nexports.setTimeZone = setTimeZone;\nexports.convertTimeToDate = convertTimeToDate;\nexports.convertDateToTime = convertDateToTime;\n"]},"metadata":{},"sourceType":"script"}