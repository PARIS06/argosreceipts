{"ast":null,"code":"// import { updateAPIConfig } from '../Api/base';\n// import { loginUser, registerUser } from '../Api/auth';\nimport * as actionTypes from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = authData => {\n  return {\n    type: actionTypes.AUTH_SUCCESS\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const register = (firstName, lastName, email, password, user_type) => {\n  return dispatch => {\n    dispatch(authStart());\n  };\n}; // // Tools\n// import { setAuthToken } from '../Tools';\n// export const setAuthStatus = (status, email = null) => ({\n//    type: actionTypes.SET_AUTH_STATUS,\n//    status,\n//    email\n// });\n// // Login\n// export const login = data => async dispatch => {\n//    try {\n//       const token = await loginUser(data);\n//       if (!token) {\n//          dispatch(setAuthStatus(false));\n//          return;\n//       }\n//       setAuthToken(token);\n//       updateAPIConfig({ authToken: token });\n//       dispatch(setAuthStatus(true));\n//    } catch (err) {\n//       dispatch(setAuthStatus(false));\n//    }\n// };\n// // Register\n// export const register = data => async dispatch => {\n//    try {\n//       const user = await registerUser(data);\n//       if (!user) {\n//          dispatch(setAuthStatus(false));\n//          return;\n//       }\n//       dispatch(setAuthStatus(true));\n//    } catch (err) {\n//       dispatch(setAuthStatus(false));\n//    }\n// };","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/Store/Actions/auth.js"],"names":["actionTypes","authStart","type","AUTH_START","authSuccess","authData","AUTH_SUCCESS","authFail","error","AUTH_FAIL","register","firstName","lastName","email","password","user_type","dispatch"],"mappings":"AAAA;AACA;AACA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC5B,SAAO;AACJC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AADd,GAAP;AAGF,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc;AACtC,SAAO;AACJH,IAAAA,IAAI,EAAEF,WAAW,CAACM;AADd,GAAP;AAGF,CAJM;AAMP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAChC,SAAO;AACJN,IAAAA,IAAI,EAAEF,WAAW,CAACS,SADd;AAEJD,IAAAA,KAAK,EAAEA;AAFH,GAAP;AAIF,CALM;AAOP,OAAO,MAAME,QAAQ,GAAG,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,KAAtB,EAA6BC,QAA7B,EAAuCC,SAAvC,KAAqD;AAC1E,SAAOC,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACF,GAFD;AAGF,CAJM,C,CAQP;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import { updateAPIConfig } from '../Api/base';\n// import { loginUser, registerUser } from '../Api/auth';\nimport * as actionTypes from './actionTypes';\n\n\nexport const authStart = () => {\n   return {\n      type: actionTypes.AUTH_START\n   }\n}\n\nexport const authSuccess = (authData) => {\n   return {\n      type: actionTypes.AUTH_SUCCESS\n   }\n}\n\nexport const authFail = (error) => {\n   return {\n      type: actionTypes.AUTH_FAIL,\n      error: error\n   }\n}\n\nexport const register = (firstName, lastName, email, password, user_type) => {\n   return dispatch => {\n      dispatch(authStart());\n   };\n}\n\n\n\n// // Tools\n// import { setAuthToken } from '../Tools';\n\n// export const setAuthStatus = (status, email = null) => ({\n//    type: actionTypes.SET_AUTH_STATUS,\n//    status,\n//    email\n// });\n\n// // Login\n// export const login = data => async dispatch => {\n//    try {\n//       const token = await loginUser(data);\n\n//       if (!token) {\n//          dispatch(setAuthStatus(false));\n//          return;\n//       }\n\n//       setAuthToken(token);\n//       updateAPIConfig({ authToken: token });\n//       dispatch(setAuthStatus(true));\n//    } catch (err) {\n//       dispatch(setAuthStatus(false));\n//    }\n// };\n\n// // Register\n// export const register = data => async dispatch => {\n//    try {\n//       const user = await registerUser(data);\n\n//       if (!user) {\n//          dispatch(setAuthStatus(false));\n//          return;\n//       }\n\n//       dispatch(setAuthStatus(true));\n//    } catch (err) {\n//       dispatch(setAuthStatus(false));\n//    }\n// };\n"]},"metadata":{},"sourceType":"module"}