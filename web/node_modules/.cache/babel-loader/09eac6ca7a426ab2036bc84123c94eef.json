{"ast":null,"code":"// import { updateAPIConfig } from '../../api/base';\n// import { loginUser, registerUser } from '../../api/auth';\nimport * as actionTypes from './actionTypes';\nimport axios from 'axios'; // import { setAuthToken } from '../../Tools';\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = authData => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    authData: authData\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const auth = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n  };\n};\nexport const register = (firstName, lastName, email, password, user_type) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      firstName: firstName,\n      lastName: lastName,\n      user_type: user_type,\n      returnSecureToken: true\n    };\n    axios.post('http://54.152.6.107/auth/create-user/', authData).then(response => {\n      console.log(response);\n      dispatch(authSuccess(response.data));\n    }).catch(err => {\n      console.log(err);\n      dispatch(authFail(err));\n    });\n  };\n}; // Tools\n\nexport const setAuthStatus = (status, email = null) => ({\n  type: actionTypes.SET_AUTH_STATUS,\n  status,\n  email\n}); // Login\n\nexport const login = (firstName, lastName, email, password, user_type) => async dispatch => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      firstName: firstName,\n      lastName: lastName,\n      user_type: user_type,\n      returnSecureToken: true\n    };\n    axios.post('http://54.152.6.107/auth/create-user/', authData).then(response => {\n      console.log(response);\n      dispatch(authSuccess(response.data));\n    }).catch(err => {\n      console.log(err);\n      dispatch(authFail(err));\n    });\n  };\n}; // // Register\n// export const register = data => async dispatch => {\n//    try {\n//       const user = await registerUser(data);\n//       if (!user) {\n//          dispatch(setAuthStatus(false));\n//          return;\n//       }\n//       dispatch(setAuthStatus(true));\n//    } catch (err) {\n//       dispatch(setAuthStatus(false));\n//    }\n// };","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/store/Actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","authData","AUTH_SUCCESS","authFail","error","AUTH_FAIL","auth","email","password","dispatch","register","firstName","lastName","user_type","returnSecureToken","post","then","response","console","log","data","catch","err","setAuthStatus","status","SET_AUTH_STATUS","login"],"mappings":"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","sourcesContent":["// import { updateAPIConfig } from '../../api/base';\n// import { loginUser, registerUser } from '../../api/auth';\nimport * as actionTypes from './actionTypes';\n\nimport axios from 'axios';\n\n// import { setAuthToken } from '../../Tools';\n\nexport const authStart = () => {\n   return {\n      type: actionTypes.AUTH_START\n   }\n}\n\nexport const authSuccess = (authData) => {\n   return {\n      type: actionTypes.AUTH_SUCCESS,\n      authData: authData\n   }\n}\n\nexport const authFail = (error) => {\n   return {\n      type: actionTypes.AUTH_FAIL,\n      error: error\n   }\n}\n\nexport const auth = (email, password) => {\n   return dispatch => {\n      dispatch(authStart())\n   }\n}\n\nexport const register = (firstName, lastName, email, password, user_type) => {\n   return dispatch => {\n      dispatch(authStart());\n      const authData = {\n         email: email,\n         password: password,\n         firstName: firstName,\n         lastName: lastName,\n         user_type: user_type,\n         returnSecureToken: true\n      };\n      axios.post('http://54.152.6.107/auth/create-user/', authData)\n         .then(response => {\n            console.log(response);\n            dispatch(authSuccess(response.data))\n         })\n         .catch(err => {\n            console.log(err);\n            dispatch(authFail(err));\n         });\n   };\n}\n\n\n\n// Tools\n\nexport const setAuthStatus = (status, email = null) => ({\n   type: actionTypes.SET_AUTH_STATUS,\n   status,\n   email\n});\n\n// Login\nexport const login = (firstName, lastName, email, password, user_type) => async dispatch => {\n   return dispatch => {\n      dispatch(authStart());\n      const authData = {\n         email: email,\n         password: password,\n         firstName: firstName,\n         lastName: lastName,\n         user_type: user_type,\n         returnSecureToken: true\n      };\n      axios.post('http://54.152.6.107/auth/create-user/', authData)\n         .then(response => {\n            console.log(response);\n            dispatch(authSuccess(response.data))\n         })\n         .catch(err => {\n            console.log(err);\n            dispatch(authFail(err));\n         });\n   };\n};\n\n// // Register\n// export const register = data => async dispatch => {\n//    try {\n//       const user = await registerUser(data);\n\n//       if (!user) {\n//          dispatch(setAuthStatus(false));\n//          return;\n//       }\n\n//       dispatch(setAuthStatus(true));\n//    } catch (err) {\n//       dispatch(setAuthStatus(false));\n//    }\n// };\n"]},"metadata":{},"sourceType":"module"}