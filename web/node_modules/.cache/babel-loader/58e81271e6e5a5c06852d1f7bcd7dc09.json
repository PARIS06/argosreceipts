{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/containers/Merchant/Merchant.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom'; // import { connect } from 'react-redux';\n// // import * as Actions from '../../store/Actions';\n// // import withAuth from '../../hoc/WithAuth';\n// import { isValidToken } from '../../Tools';\n\nimport Dashboard from '../../components/Merchant/Dashboard';\nimport ReceiptBuilder from '../../components/Merchant/ReceiptBuilder/ReceiptBuilder';\nimport Accounts from '../../containers/Accounts';\nimport Receipts from '../../containers/Receipts';\nimport Cards from '../../containers/Cards';\nimport Profile from '../../containers/Profile';\nimport ProfileChangeDetails from '../../containers/Profile/ChangeDetails';\nimport { card } from '../../utils/Dummydata'; // Get all user's initial data or redirect back to /login if not logged in\n// This is all handled in withAuth HOC\n\nclass Merchant extends Component {\n  //    componentDidMount() {\n  //       isValidToken()\n  //          .then(() => {\n  //             this.props.setAuthStatus(true);\n  //             this.props.fetchInitialData();\n  //          })\n  //          .catch(() => {\n  //             this.props.setAuthStatus(false);\n  //          });\n  //    }\n  render() {\n    //   if (!this.props.initialDataStatus) {\n    //      return <Loader />;\n    //   } else {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/merchants\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel/accounts\",\n      component: Accounts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/merchants/receiptbuilder\",\n      component: ReceiptBuilder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel/cards\",\n      component: Cards,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel/profile\",\n      component: Profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel/change-details\",\n      component: ProfileChangeDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: PageNotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Merchant; // const mapStateToProps = state => {\n//    return {\n//       initialDataStatus: state.panel.initialDataStatus\n//    };\n// };\n// const mapDispatchToProps = dispatch => {\n//    return {\n//       setAuthStatus: status => dispatch(Actions.setAuthStatus(status)),\n//       fetchInitialData: () => dispatch(Actions.fetchInitialData())\n//    };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(withAuth(Panel));","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/containers/Merchant/Merchant.js"],"names":["React","Component","Fragment","Route","Switch","Dashboard","ReceiptBuilder","Accounts","Receipts","Cards","Profile","ProfileChangeDetails","card","Merchant","render","PageNotFound"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CACA;AACA;AACA;AAEA;;AAEA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AAGA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,oBAAP,MAAiC,wCAAjC;AAGA,SAASC,IAAT,QAAqB,uBAArB,C,CAGA;AACA;;AACA,MAAMC,QAAN,SAAuBZ,SAAvB,CAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEGa,EAAAA,MAAM,GAAG;AACR;AACA;AACA;AACK,WACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,YAAlB;AAA+B,MAAA,SAAS,EAAET,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAA8B,MAAA,SAAS,EAAEE,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,EAGG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,2BAAZ;AAAwC,MAAA,SAAS,EAAED,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,EAIG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,cAAZ;AAA2B,MAAA,SAAS,EAAEG,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,EAKG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,gBAAZ;AAA6B,MAAA,SAAS,EAAEC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,EAMG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,uBAAZ;AAAoC,MAAA,SAAS,EAAEC,oBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH,EAOG,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEI,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPH,CAHH,CADH;AAeL;;AA/B6B;;AAkCjC,eAAeF,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// // import * as Actions from '../../store/Actions';\n// // import withAuth from '../../hoc/WithAuth';\n\n// import { isValidToken } from '../../Tools';\n\nimport Dashboard from '../../components/Merchant/Dashboard';\nimport ReceiptBuilder from '../../components/Merchant/ReceiptBuilder/ReceiptBuilder';\n\n\nimport Accounts from '../../containers/Accounts';\nimport Receipts from '../../containers/Receipts';\nimport Cards from '../../containers/Cards';\nimport Profile from '../../containers/Profile';\nimport ProfileChangeDetails from '../../containers/Profile/ChangeDetails';\n\n\nimport { card } from '../../utils/Dummydata'; \n\n\n// Get all user's initial data or redirect back to /login if not logged in\n// This is all handled in withAuth HOC\nclass Merchant extends Component {\n//    componentDidMount() {\n//       isValidToken()\n//          .then(() => {\n//             this.props.setAuthStatus(true);\n//             this.props.fetchInitialData();\n//          })\n//          .catch(() => {\n//             this.props.setAuthStatus(false);\n//          });\n//    }\n\n   render() {\n    //   if (!this.props.initialDataStatus) {\n    //      return <Loader />;\n    //   } else {\n         return (\n            <Fragment>\n               {/* <Route path=\"/panel\" component={Navigation} /> */}\n\n               <Switch>\n                  <Route exact path=\"/merchants\" component={Dashboard} />\n                  <Route path=\"/panel/accounts\" component={Accounts} />\n                  <Route path=\"/merchants/receiptbuilder\" component={ReceiptBuilder} />\n                  <Route path=\"/panel/cards\" component={Cards} />\n                  <Route path=\"/panel/profile\" component={Profile} />\n                  <Route path=\"/panel/change-details\" component={ProfileChangeDetails} />\n                  <Route component={PageNotFound} />\n               </Switch>\n            </Fragment>\n         );\n   }\n}\n\nexport default Merchant;\n\n// const mapStateToProps = state => {\n//    return {\n//       initialDataStatus: state.panel.initialDataStatus\n//    };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//    return {\n//       setAuthStatus: status => dispatch(Actions.setAuthStatus(status)),\n//       fetchInitialData: () => dispatch(Actions.fetchInitialData())\n//    };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(withAuth(Panel));\n"]},"metadata":{},"sourceType":"module"}