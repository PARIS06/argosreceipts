{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/components/App/index.js\";\nimport React, { Component } from 'react'; // import { connect } from 'react-redux';\n\nimport { Route, Switch } from 'react-router-dom';\nimport * as Actions from '../../store/Actions'; // import withAuth from '../../hoc/WithAuth';\n// import { isValidToken } from '../../Tools';\n// import Loader from '../UI/Loader';\n\nimport Layout from '../../hoc/Layout';\nimport Home from '../../containers/Home';\nimport Panel from '../../containers/Panel'; // import Login from '../../containers/Authorization/Login';\n// import Register from '../../containers/Authorization/Register';\n\nimport Logout from '../../components/Authorization/Logout/';\nimport PageNotFound from '../PageNotFound'; // import { card } from '../../utils/Dummydata'; \n\nimport './app.scss';\nimport Merchant from '../../containers/Merchant/Merchant'; // Get all user's initial data or redirect back to /login if not logged in\n// This is all handled in withAuth HOC\n\nclass App extends Component {\n  //    componentDidMount() {\n  //       isValidToken()\n  //          .then(() => {\n  //             this.props.setAuthStatus(true);\n  //             this.props.fetchInitialData();\n  //          })\n  //          .catch(() => {\n  //             this.props.setAuthStatus(false);\n  //          });\n  //    }\n  render() {\n    //   if (!this.props.initialDataStatus) {\n    //      return <Loader />;\n    //   } else {\n    return React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/merchants\",\n      component: Merchant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/logout\",\n      component: Logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/panel\",\n      component: Panel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: PageNotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App; // const mapDispatchToProps = dispatch => {\n//    return {\n//       setAuthStatus: status => dispatch(Actions.setAuthStatus(status))\n//    };\n// };\n// export default withRouter(connect(null, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/components/App/index.js"],"names":["React","Component","Route","Switch","Actions","Layout","Home","Panel","Logout","PageNotFound","Merchant","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB,C,CACA;AAEA;AAEA;;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB,C,CAEA;AACA;;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,YAAP,MAAyB,iBAAzB,C,CAGA;;AAEA,OAAO,YAAP;AAEA,OAAOC,QAAP,MAAqB,oCAArB,C,CAIA;AACA;;AACA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEGW,EAAAA,MAAM,GAAG;AACR;AACA;AACA;AACK,WAEM,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEN,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAEI,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,EAGG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEF,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,EAKG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAED,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,EAMG,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEE,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH,CADH,CAFN;AAeL;;AA/BwB;;AAkC5B,eAAeE,GAAf,C,CACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react';\n// import { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport * as Actions from '../../store/Actions';\n// import withAuth from '../../hoc/WithAuth';\n\n// import { isValidToken } from '../../Tools';\n\n// import Loader from '../UI/Loader';\n\nimport Layout from '../../hoc/Layout';\n\nimport Home from '../../containers/Home';\nimport Panel from '../../containers/Panel';\n\n// import Login from '../../containers/Authorization/Login';\n// import Register from '../../containers/Authorization/Register';\nimport Logout from '../../components/Authorization/Logout/';\nimport PageNotFound from '../PageNotFound';\n\n\n// import { card } from '../../utils/Dummydata'; \n\nimport './app.scss';\n\nimport Merchant from '../../containers/Merchant/Merchant';\n\n\n\n// Get all user's initial data or redirect back to /login if not logged in\n// This is all handled in withAuth HOC\nclass App extends Component {\n//    componentDidMount() {\n//       isValidToken()\n//          .then(() => {\n//             this.props.setAuthStatus(true);\n//             this.props.fetchInitialData();\n//          })\n//          .catch(() => {\n//             this.props.setAuthStatus(false);\n//          });\n//    }\n\n   render() {\n    //   if (!this.props.initialDataStatus) {\n    //      return <Loader />;\n    //   } else {\n         return (\n           \n               <Layout>\n                  <Switch>\n                     <Route exact path=\"/\" component={Home} />\n                     <Route path=\"/merchants\" component={Merchant} />\n                     <Route path=\"/logout\" component={Logout} />\n                     {/* <Route path=\"/auth/create-user\" component={Register} /> */}\n                     <Route path=\"/panel\" component={Panel} />\n                     <Route component={PageNotFound} />\n               </Switch>\n               </Layout>\n           \n           \n         );\n   }\n}\n\nexport default App;\n// const mapDispatchToProps = dispatch => {\n//    return {\n//       setAuthStatus: status => dispatch(Actions.setAuthStatus(status))\n//    };\n// };\n\n// export default withRouter(connect(null, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}