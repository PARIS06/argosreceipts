{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/Components/Authorization/Register/Form.js\";\nimport React from 'react';\nimport { Form, Field, withFormik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport SingleModuleButton from '../../../Components/UI/Buttons/SingleModuleButton';\n\nconst InnerForm = props => {\n  const {\n    errors,\n    touched\n  } = props;\n  return React.createElement(Form, {\n    className: \"register-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Registration is currently inactive\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Already have an account?\"))), React.createElement(SingleModuleButton, {\n    text: \"Create your account\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n}; // Wrap our form with the using withFormik HoC\n\n\nconst RegisterForm = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: props => ({\n    email: '',\n    password: ''\n  }),\n  // Add a custom validation function (this can be async too!)\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required('Email is required').email('This is not a valid email'),\n    password: Yup.string().required('Password is required').min(6, 'Your password has to be at least 6 characters')\n  }),\n  // Submission handler\n  handleSubmit: (values, {\n    props,\n    setStatus\n  }) => {\n    props.onRegisterSubmit(values.email, values.password);\n  }\n})(InnerForm);\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/Components/Authorization/Register/Form.js"],"names":["React","Form","Field","withFormik","Link","Yup","SingleModuleButton","InnerForm","props","errors","touched","RegisterForm","mapPropsToValues","email","password","validationSchema","object","shape","string","required","min","handleSubmit","values","setStatus","onRegisterSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,QAAwC,QAAxC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,kBAAP,MAA+B,mDAA/B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACxB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBF,KAA5B;AAEA,SACG,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADH,CADH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADH,CALH,CADH,EAWG,oBAAC,kBAAD;AAAoB,IAAA,IAAI,EAAC,qBAAzB;AAA+C,IAAA,IAAI,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXH,CADH;AAeF,CAlBD,C,CAoBA;;;AACA,MAAMG,YAAY,GAAGR,UAAU,CAAC;AAC7B;AACAS,EAAAA,gBAAgB,EAAEJ,KAAK,KAAK;AAAEK,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAL,CAFM;AAI7B;AACAC,EAAAA,gBAAgB,EAAEV,GAAG,CAACW,MAAJ,GAAaC,KAAb,CAAmB;AAClCJ,IAAAA,KAAK,EAAER,GAAG,CAACa,MAAJ,GACHC,QADG,CACM,mBADN,EAEHN,KAFG,CAEG,2BAFH,CAD2B;AAIlCC,IAAAA,QAAQ,EAAET,GAAG,CAACa,MAAJ,GACNC,QADM,CACG,sBADH,EAENC,GAFM,CAEF,CAFE,EAEC,+CAFD;AAJwB,GAAnB,CALW;AAc7B;AACAC,EAAAA,YAAY,EAAE,CAACC,MAAD,EAAS;AAAEd,IAAAA,KAAF;AAASe,IAAAA;AAAT,GAAT,KAAkC;AAC7Cf,IAAAA,KAAK,CAACgB,gBAAN,CAAuBF,MAAM,CAACT,KAA9B,EAAqCS,MAAM,CAACR,QAA5C;AACF;AAjB4B,CAAD,CAAV,CAkBlBP,SAlBkB,CAArB;AAoBA,eAAeI,YAAf","sourcesContent":["import React from 'react';\nimport { Form, Field, withFormik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport SingleModuleButton from '../../../Components/UI/Buttons/SingleModuleButton';\n\nconst InnerForm = props => {\n   const { errors, touched } = props;\n\n   return (\n      <Form className=\"register-form\">\n         <div>\n            <p>\n               <b>Registration is currently inactive</b>\n            </p>\n\n            <p>\n               <Link to=\"/login\">Already have an account?</Link>\n            </p>\n         </div>\n\n         <SingleModuleButton text=\"Create your account\" type=\"submit\" />\n      </Form>\n   );\n};\n\n// Wrap our form with the using withFormik HoC\nconst RegisterForm = withFormik({\n   // Transform outer props into form values\n   mapPropsToValues: props => ({ email: '', password: '' }),\n\n   // Add a custom validation function (this can be async too!)\n   validationSchema: Yup.object().shape({\n      email: Yup.string()\n         .required('Email is required')\n         .email('This is not a valid email'),\n      password: Yup.string()\n         .required('Password is required')\n         .min(6, 'Your password has to be at least 6 characters')\n   }),\n\n   // Submission handler\n   handleSubmit: (values, { props, setStatus }) => {\n      props.onRegisterSubmit(values.email, values.password);\n   }\n})(InnerForm);\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}