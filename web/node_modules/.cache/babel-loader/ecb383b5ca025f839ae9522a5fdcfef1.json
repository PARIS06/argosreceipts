{"ast":null,"code":"// import React, { Component } from 'react';\n// import { compose } from 'redux';\n// import { connect } from 'react-redux';\n// // Handle redirects for /login, /register and /panel\n// const withAuth = WrappedComponent => {\n//    return class extends Component {\n//       componentDidMount() {\n//          this.shouldRedirect(this.props);\n//       }\n//       shouldComponentUpdate(nextProps) {\n//          this.shouldRedirect(nextProps);\n//          return true;\n//       }\n//       shouldRedirect(props) {\n//          console.log(props);\n//          const path = props.location.pathname;\n//          // If we are on login/register and auth is complete, redirect to /panel\n//          // Otherwise redirect to /login\n//          if ((path === '/auth/login/' || path === '/auth/create-user/') && props.authStatus) {\n//             this.props.history.push('/panel');\n//          } \n//          // else if (path.startsWith('/panel') && !props.authStatus) {\n//          //    this.props.history.push('/auth/login/');\n//          // }\n//       }\n//       render() {\n//          return <WrappedComponent {...this.props} />;\n//       }\n//    };\n// };\n// const mapStateToProps = state => {\n//    return {\n//       authStatus: state.auth.status\n//    };\n// };\n// export default compose(\n//    connect(mapStateToProps),\n//    withAuth\n// );","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/hoc/WithAuth/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["// import React, { Component } from 'react';\n// import { compose } from 'redux';\n// import { connect } from 'react-redux';\n\n// // Handle redirects for /login, /register and /panel\n// const withAuth = WrappedComponent => {\n//    return class extends Component {\n//       componentDidMount() {\n//          this.shouldRedirect(this.props);\n//       }\n\n//       shouldComponentUpdate(nextProps) {\n//          this.shouldRedirect(nextProps);\n\n//          return true;\n//       }\n\n//       shouldRedirect(props) {\n//          console.log(props);\n//          const path = props.location.pathname;\n\n//          // If we are on login/register and auth is complete, redirect to /panel\n//          // Otherwise redirect to /login\n//          if ((path === '/auth/login/' || path === '/auth/create-user/') && props.authStatus) {\n//             this.props.history.push('/panel');\n//          } \n//          // else if (path.startsWith('/panel') && !props.authStatus) {\n//          //    this.props.history.push('/auth/login/');\n//          // }\n//       }\n\n//       render() {\n//          return <WrappedComponent {...this.props} />;\n//       }\n//    };\n// };\n\n// const mapStateToProps = state => {\n//    return {\n//       authStatus: state.auth.status\n//    };\n// };\n\n// export default compose(\n//    connect(mapStateToProps),\n//    withAuth\n// );\n"]},"metadata":{},"sourceType":"module"}