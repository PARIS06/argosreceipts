{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/components/Authorization/Register/ConsumerForm.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MuiPhoneNumber from 'material-ui-phone-number';\nconst useStyles = makeStyles(theme => ({\n  Logo: {\n    height: \"7em\",\n    padding: \"10px\"\n  },\n  button: { ...theme.typography.logIn,\n    borderRadius: \"40px\",\n    width: \"15em\",\n    \"&:hover\": {\n      backgroundColor: \"theme.palette.primary.light\",\n      color: \"white\"\n    }\n  }\n}));\n\nconst ConsumerForm = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phoneNumber, setNumber] = useState('');\n  return React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    style: {\n      maxWidth: \"20em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Email\",\n    id: \"email\",\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    style: {\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Password\",\n    id: \"password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    style: {\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(MuiPhoneNumber, {\n    defaultCountry: 'us',\n    fullWidth: true,\n    disableAreaCodes: true,\n    value: phoneNumber,\n    onChange: e => setNumber(e.target.value),\n    placeholder: \"(   ) xxx-xxxx\",\n    style: {\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    style: {\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Register\"))))));\n};\n\nexport default ConsumerForm; // import React from 'react';\n// import { Link } from 'react-router-dom';\n// import Input from '../../../Components/UI/FormBoxes/Input/Input';\n// import SingleModuleButton from '../../../Components/UI/Buttons/SingleModuleButton';\n// const RegisterForm = (props) => {\n//    <Form className=\"register-form\">\n//       {JSON.stringify(values)}\n//       <div>\n//      <div className=\"form-group\">\n//         <Field \n//          type=\"text\"\n//          name=\"name\"\n//          placeholder=\"Enter your name\"\n//          className=\"form-control login-input\"\n//          onChange={handleChange}\n//          onBlur={handleBlur}\n//          value={values.name}\n//         />\n//         {touched.name && errors.name && \n//             <p className=\"field-invalid\">{errors.name}</p>\n//         }\n//      </div>\n//      <div className=\"form-group\">\n//         <Field \n//          type=\"email\"\n//          name=\"email\"\n//          placeholder=\"Please enter a valid email\"\n//          className=\"form-control login-input\"\n//          onChange={handleChange}\n//          onBlur={handleBlur}\n//          value={values.email}\n//         />\n//         {touched.email && errors.email && \n//             <p className=\"field-invalid\">{errors.email}</p>\n//         }\n//      </div>\n//      <div className=\"form-group\">\n//         <Field \n//          type=\"password\"\n//          name=\"password\"\n//          placeholder=\"Choose a password\"\n//          className=\"form-control password-input\"\n//          onChange={handleChange}\n//          onBlur={handleBlur}\n//          value={values.password}\n//         />\n//         {touched.password && errors.password && (\n//             <p className=\"field-invalid\">{errors.password}</p>\n//          )}\n//      </div>\n//      <div className=\"form-group\">\n//         <select\n//          type=\"select\"\n//          name=\"user_type\"\n//          placeholder=\"Choose an account type\"\n//          className=\"form-control\"\n//          onChange={handleChange}\n//          onBlur={handleBlur}\n//          value={values.user_type}\n//         >\n//            <option value=\"0\">Consumer</option>\n//            <option value=\"1\">Merchant</option>\n//         </select>\n//      </div>\n//      <p>\n//        <Link to=\"/auth/login/\">Already have an account?</Link>\n//       </p>\n//      </div>\n//      <SingleModuleButton text=\"Create your account\" type=\"submit\" />\n//   </Form>\n//    )\n// }\n// Wrap our form with \"using withFormik HoC\"\n// const RegisterForm = withFormik({\n//    // Transform outer props into form values\n//    mapPropsToValues: props => ({ email: '', name: '', password: '', user_type: '' }),\n//    validationSchema: Yup.object().shape({\n//       name: Yup.string()\n//          .min(1, 'Must have a character')\n//          .max(255, 'Must be shorter than 255')\n//          .required('Must enter a name'),\n//       email: Yup.string()\n//          .required('Email is required')\n//          .email('This is not a valid email'),\n//       password: Yup.string()\n//          .required('Password is required')\n//          .min(6, 'Your password has to be at least 6 characters'),\n//       user_type: Yup.string()\n//          .required('You must select a user type')\n//    }),\n//    // Submission handler\n//    handleSubmit: (values, { props, setStatus }) => {\n//       props.onRegisterSubmit(values.email, values.name, values.password, values.user_type);\n//    }\n// })(InnerForm);\n// export default RegisterForm;","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/components/Authorization/Register/ConsumerForm.js"],"names":["React","useState","Link","makeStyles","useTheme","Grid","Typography","Button","TextField","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","MuiPhoneNumber","useStyles","theme","Logo","height","padding","button","typography","logIn","borderRadius","width","backgroundColor","color","ConsumerForm","props","classes","email","setEmail","password","setPassword","phoneNumber","setNumber","maxWidth","event","target","value","marginTop","e"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles, useTheme} from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport MuiPhoneNumber from 'material-ui-phone-number';\n\n\nconst useStyles = makeStyles(theme => ({\n   Logo: {\n      height: \"7em\",\n      padding: \"10px\",\n    },\n    button: {\n      ...theme.typography.logIn,\n      borderRadius: \"40px\",\n      width: \"15em\",\n      \"&:hover\": {\n        backgroundColor: \"theme.palette.primary.light\",\n        color: \"white\"\n        }  \n    }\n}))\n\nconst ConsumerForm = props => {\n   const classes = useStyles()\n   const theme = useTheme()\n\n   const [email, setEmail] = useState('')\n   const [password, setPassword] = useState('')\n   const [phoneNumber, setNumber] = useState('')\n\n   return (\n      <Grid container direction=\"row\">\n         <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\">\n            <Grid item>\n               <Grid container direction=\"column\">\n                  <Grid item container direction=\"column\" style={{maxWidth: \"20em\"}}>\n                     <Grid item>\n                        <TextField \n                           required\n                           fullWidth\n                           label=\"Email\" \n                           id=\"email\" \n                           value={email} \n                           onChange={(event) => setEmail(event.target.value) }\n                           style={{marginTop: \"2em\"}} \n                        />\n                     </Grid>\n                     <Grid item>\n                        <TextField \n                           required\n                           fullWidth\n                           label=\"Password\" \n                           id=\"password\"         \n                           type=\"password\"\n                           autoComplete=\"current-password\"\n                           value={password}\n                           onChange={(event) => setPassword(event.target.value)}\n                           style={{marginTop: \"2em\"}}\n                        />\n                     </Grid>\n                     <Grid item>\n                        <MuiPhoneNumber\n                            defaultCountry={'us'} \n                            fullWidth\n                            disableAreaCodes\n                            value={phoneNumber}\n                            onChange={(e) => setNumber(e.target.value)}\n                            placeholder=\"(   ) xxx-xxxx\"\n                            style={{marginTop: \"2em\"}}\n                            />\n                     </Grid>\n                  </Grid>\n                  <Grid item container justify=\"center\" style={{ marginTop: \"2em\" }}>\n                     <Button className={classes.button} variant= \"contained\" color=\"secondary\">Register</Button>\n                  </Grid>\n               </Grid>\n            </Grid>\n         </Grid>\n      </Grid>\n   )\n}\n\nexport default ConsumerForm;\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import Input from '../../../Components/UI/FormBoxes/Input/Input';\n// import SingleModuleButton from '../../../Components/UI/Buttons/SingleModuleButton';\n\n\n// const RegisterForm = (props) => {\n\n  \n    \n         //    <Form className=\"register-form\">\n         //       {JSON.stringify(values)}\n         //       <div>\n         //      <div className=\"form-group\">\n         //         <Field \n         //          type=\"text\"\n         //          name=\"name\"\n         //          placeholder=\"Enter your name\"\n         //          className=\"form-control login-input\"\n         //          onChange={handleChange}\n         //          onBlur={handleBlur}\n         //          value={values.name}\n         //         />\n         //         {touched.name && errors.name && \n         //             <p className=\"field-invalid\">{errors.name}</p>\n         //         }\n         //      </div>\n         //      <div className=\"form-group\">\n         //         <Field \n         //          type=\"email\"\n         //          name=\"email\"\n         //          placeholder=\"Please enter a valid email\"\n         //          className=\"form-control login-input\"\n         //          onChange={handleChange}\n         //          onBlur={handleBlur}\n         //          value={values.email}\n         //         />\n         //         {touched.email && errors.email && \n         //             <p className=\"field-invalid\">{errors.email}</p>\n         //         }\n         //      </div>\n         //      <div className=\"form-group\">\n         //         <Field \n         //          type=\"password\"\n         //          name=\"password\"\n         //          placeholder=\"Choose a password\"\n         //          className=\"form-control password-input\"\n         //          onChange={handleChange}\n         //          onBlur={handleBlur}\n         //          value={values.password}\n         //         />\n         //         {touched.password && errors.password && (\n         //             <p className=\"field-invalid\">{errors.password}</p>\n         //          )}\n         //      </div>\n         //      <div className=\"form-group\">\n         //         <select\n         //          type=\"select\"\n         //          name=\"user_type\"\n         //          placeholder=\"Choose an account type\"\n         //          className=\"form-control\"\n         //          onChange={handleChange}\n         //          onBlur={handleBlur}\n         //          value={values.user_type}\n         //         >\n         //            <option value=\"0\">Consumer</option>\n         //            <option value=\"1\">Merchant</option>\n         //         </select>\n         //      </div>\n         //      <p>\n         //        <Link to=\"/auth/login/\">Already have an account?</Link>\n         //       </p>\n         //      </div>\n         //      <SingleModuleButton text=\"Create your account\" type=\"submit\" />\n         //   </Form>\n      \n//    )\n// }\n\n// Wrap our form with \"using withFormik HoC\"\n// const RegisterForm = withFormik({\n//    // Transform outer props into form values\n//    mapPropsToValues: props => ({ email: '', name: '', password: '', user_type: '' }),\n\n//    validationSchema: Yup.object().shape({\n//       name: Yup.string()\n//          .min(1, 'Must have a character')\n//          .max(255, 'Must be shorter than 255')\n//          .required('Must enter a name'),\n//       email: Yup.string()\n//          .required('Email is required')\n//          .email('This is not a valid email'),\n//       password: Yup.string()\n//          .required('Password is required')\n//          .min(6, 'Your password has to be at least 6 characters'),\n//       user_type: Yup.string()\n//          .required('You must select a user type')\n//    }),\n\n//    // Submission handler\n//    handleSubmit: (values, { props, setStatus }) => {\n//       props.onRegisterSubmit(values.email, values.name, values.password, values.user_type);\n//    }\n// })(InnerForm);\n\n// export default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}