{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/components/Authorization/Login/Form.js\";\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nconst useStyles = makeStyles(theme => ({\n  Logo: {\n    height: \"7em\",\n    padding: \"10px\"\n  },\n  button: { ...theme.typography.logIn,\n    borderRadius: \"40px\",\n    width: \"15em\",\n    \"&:hover\": {\n      backgroundColor: \"theme.palette.primary.light\",\n      color: \"white\"\n    }\n  }\n}));\n\nconst LoginForm = props => {\n  const classes = useStyles();\n  const theme = useTheme(); // const [email, setEmail] = useState('')\n  // const [password, setPassword] = useState('')\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  console.log(formik.values.email);\n  console.log(formik.values.password);\n  return React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"center\",\n    color: \"primary\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Log In\")), React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    style: {\n      maxWidth: \"20em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Email\",\n    id: \"email\",\n    name: \"email\",\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    style: {\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), formik.touched.email && formik.errors.email ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, formik.errors.email) : null, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Password\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    onChange: formik.handleChange,\n    style: {\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    style: {\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Log in\"))))))));\n};\n\nexport default LoginForm; // import { Form, Field, withFormik } from 'formik';\n// import { Link } from 'react-router-dom';\n// import * as Yup from 'yup';\n// import SingleModuleButton from '../../../components/UI/Buttons/SingleModuleButton';\n// const InnerForm = props => {\n//    const { errors, touched } = props;\n//    return (\n//       <Form className=\"login-form\">\n//          <div>\n//             <div className=\"form-group\">\n//                <Field\n//                   type=\"email\"\n//                   className=\"form-control login-input\"\n//                   name=\"email\"\n//                   placeholder=\"Your email...\"\n//                />\n//                {touched.email && errors.email && <p className=\"field-invalid\">{errors.email}</p>}\n//             </div>\n//             <div className=\"form-group\">\n//                <Field\n//                   type=\"password\"\n//                   className=\"form-control password-input\"\n//                   name=\"password\"\n//                   placeholder=\"Your password...\"\n//                />\n//                {touched.password && errors.password && (\n//                   <p className=\"field-invalid\">{errors.password}</p>\n//                )}\n//             </div>\n//             <div className=\"checkbox\">\n//                <label>\n//                   <Field type=\"checkbox\" name=\"remember\" />\n//                   Keep me signed in\n//                </label>\n//             </div>\n//             <p>\n//                <Link to=\"/auth/create-user/\">Don't have an account?</Link>\n//             </p>\n//          </div>\n//          <SingleModuleButton text=\"Log in now\" type=\"submit\" />\n//       </Form>\n//    );\n// };\n// // Wrap our form with the using withFormik HoC\n// const LoginForm = withFormik({\n//    // Transform outer props into form values\n//    mapPropsToValues: props => ({ email: '', password: '' }),\n//    // Add a custom validation function (this can be async too!)\n//    validationSchema: Yup.object().shape({\n//       email: Yup.string()\n//          .required('Email is required')\n//          .email('This is not a valid email'),\n//       password: Yup.string()\n//          .required('Password is required')\n//          .min(6, 'Your password has to be at least 6 characters')\n//    }),\n//    // Submission handler\n//    handleSubmit: (values, { props, setStatus }) => {\n//       props.onLoginSubmit(values.email, values.password);\n//    }\n// })(InnerForm);\n// export default LoginForm;","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/components/Authorization/Login/Form.js"],"names":["React","makeStyles","useTheme","Grid","Typography","Button","TextField","useFormik","Yup","useStyles","theme","Logo","height","padding","button","typography","logIn","borderRadius","width","backgroundColor","color","LoginForm","props","classes","formik","initialValues","email","password","onSubmit","values","alert","JSON","stringify","console","log","maxWidth","handleSubmit","handleBlur","handleChange","marginTop","touched","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme} from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\n\nconst useStyles = makeStyles(theme => ({\n   Logo: {\n      height: \"7em\",\n      padding: \"10px\",\n    },\n    button: {\n      ...theme.typography.logIn,\n      borderRadius: \"40px\",\n      width: \"15em\",\n      \"&:hover\": {\n        backgroundColor: \"theme.palette.primary.light\",\n        color: \"white\"\n        }  \n    }\n}))\n\n\n\n\nconst LoginForm = props => {\n   const classes = useStyles()\n   const theme = useTheme()\n\n   // const [email, setEmail] = useState('')\n   // const [password, setPassword] = useState('')\n\n   const formik = useFormik({\n      initialValues: {\n         email: '',\n         password: ''\n      },\n      onSubmit: values => {\n         alert(JSON.stringify(values, null, 2));\n      },\n   });\n\n   console.log(formik.values.email);\n   console.log(formik.values.password);\n\n   return (\n      <Grid container direction=\"row\">\n         <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\">\n            <Grid item>\n               <Grid container direction=\"column\">\n                  <Grid item>\n                     <Typography align=\"center\" color=\"primary\" variant=\"h4\">Log In</Typography>\n                  </Grid>\n                  <Grid item container direction=\"column\" style={{maxWidth: \"20em\"}}>\n                     <form onSubmit={formik.handleSubmit}>\n                        <Grid item>\n                           <TextField \n                              required\n                              fullWidth\n                              label=\"Email\" \n                              id=\"email\"\n                              name=\"email\"\n                              onBlur={formik.handleBlur} \n                              value={formik.values.email} \n                              onChange={formik.handleChange}\n                              style={{marginTop: \"2em\"}} \n                           />\n                        </Grid>\n                        {formik.touched.email && formik.errors.email ? (<div>{formik.errors.email}</div>) : null}\n                        <Grid item>\n                           <TextField \n                              required\n                              fullWidth\n                              label=\"Password\" \n                              id=\"password\"\n                              name=\"password\"         \n                              type=\"password\"\n                              autoComplete=\"current-password\"\n                              onBlur={formik.handleBlur} \n                              value={formik.values.password} \n                              onChange={formik.handleChange}\n                              style={{marginTop: \"2em\"}}\n                           />\n                        </Grid>\n                        <Grid item container justify=\"center\" style={{ marginTop: \"2em\" }}>\n                           <Button \n                              className={classes.button}\n                              variant= \"contained\" \n                              type=\"submit\" \n                              color=\"secondary\">\n                                 Log in\n                           </Button>\n                        </Grid>\n                     </ form>\n                  </Grid>\n               </Grid>\n            </Grid>\n         </Grid>\n      </Grid>\n   )\n};\n\nexport default LoginForm;\n\n\n// import { Form, Field, withFormik } from 'formik';\n// import { Link } from 'react-router-dom';\n// import * as Yup from 'yup';\n// import SingleModuleButton from '../../../components/UI/Buttons/SingleModuleButton';\n\n// const InnerForm = props => {\n//    const { errors, touched } = props;\n\n//    return (\n//       <Form className=\"login-form\">\n//          <div>\n//             <div className=\"form-group\">\n//                <Field\n//                   type=\"email\"\n//                   className=\"form-control login-input\"\n//                   name=\"email\"\n//                   placeholder=\"Your email...\"\n//                />\n//                {touched.email && errors.email && <p className=\"field-invalid\">{errors.email}</p>}\n//             </div>\n\n//             <div className=\"form-group\">\n//                <Field\n//                   type=\"password\"\n//                   className=\"form-control password-input\"\n//                   name=\"password\"\n//                   placeholder=\"Your password...\"\n//                />\n//                {touched.password && errors.password && (\n//                   <p className=\"field-invalid\">{errors.password}</p>\n//                )}\n//             </div>\n\n//             <div className=\"checkbox\">\n//                <label>\n//                   <Field type=\"checkbox\" name=\"remember\" />\n//                   Keep me signed in\n//                </label>\n//             </div>\n\n//             <p>\n//                <Link to=\"/auth/create-user/\">Don't have an account?</Link>\n//             </p>\n//          </div>\n\n//          <SingleModuleButton text=\"Log in now\" type=\"submit\" />\n//       </Form>\n//    );\n// };\n\n\n// // Wrap our form with the using withFormik HoC\n// const LoginForm = withFormik({\n//    // Transform outer props into form values\n//    mapPropsToValues: props => ({ email: '', password: '' }),\n\n//    // Add a custom validation function (this can be async too!)\n//    validationSchema: Yup.object().shape({\n//       email: Yup.string()\n//          .required('Email is required')\n//          .email('This is not a valid email'),\n//       password: Yup.string()\n//          .required('Password is required')\n//          .min(6, 'Your password has to be at least 6 characters')\n//    }),\n\n//    // Submission handler\n//    handleSubmit: (values, { props, setStatus }) => {\n//       props.onLoginSubmit(values.email, values.password);\n//    }\n// })(InnerForm);\n\n// export default LoginForm;\n\n\n"]},"metadata":{},"sourceType":"module"}