{"ast":null,"code":"const faker = require('faker'); // Add padding from the start of the current string/number\n\n\nexport const myPadStart = (el, targetLength, padString) => {\n  return el.toString().padStart(targetLength, padString);\n}; // Insert something after every n characters in the string\n\nexport const chunker = (el, step, string) => {\n  const regExp = new RegExp(`.{${step}}`, 'g');\n  return el.toString().match(regExp).join(string);\n}; // export const defaultUserData = {\n//     email: faker.internet.email(),\n//     password: 'admin123',\n//     firstName: 'John',\n//     lastName: 'Tsiros',\n//     dateOfBirth: faker.date.between('1960-01-01', '2000-12-31'),\n//     phone: faker.phone.phoneNumberFormat(1),\n//     picture: faker.internet.avatar(),\n//     streetAddr: faker.address.streetAddress(),\n//     postcode: faker.address.zipCode(),\n//     city: faker.address.city()\n//  };\n//  const createUser = () => {\n//     const user = new User({ ...defaultUserData });\n//     return user.save();\n//  };\n//  const createControlledUser = () => {\n//     const user = new User({\n//        ...defaultUserData,\n//        email: 'email@example.com'\n//     });\n//     return user.save();\n//  };\n//  // Accounts\n//  const createAccount = user => {\n//     const account = new Account({\n//        type: faker.random.arrayElement(['credit', 'debit']),\n//        owner: user._id,\n//        isActive: faker.random.boolean(),\n//        sortcode: faker.finance.mask(6, false, false),\n//        number: faker.finance.mask(8, false, false),\n//        currency: faker.finance.currencyCode(),\n//        balance: faker.finance.amount(1, 10000, 2)\n//     });\n//     return account.save();\n//  };\n// Cards\n\nexport const cards = [{\n  id: 1,\n  isActive: faker.random.boolean(),\n  number: faker.finance.mask(16, false, false),\n  expiresMonth: faker.random.number({\n    min: 1,\n    max: 12\n  }),\n  expiresYear: faker.random.number({\n    min: 2020,\n    max: 2030\n  })\n}, {\n  id: 2,\n  isActive: faker.random.boolean(),\n  number: faker.finance.mask(16, false, false),\n  expiresMonth: faker.random.number({\n    min: 1,\n    max: 12\n  }),\n  expiresYear: faker.random.number({\n    min: 2020,\n    max: 2030\n  })\n}]; // Receipts\n\nexport const receipts = [{\n  type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n  payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n  merchant_id: faker.finance.mask(16, false, false),\n  mercant_address: faker.random.arrayElement(['normal', 'turbo']),\n  coupon_barcode: faker.finance.mask(16, false, false),\n  register_terminal_id: faker.finance.mask(16, false, false),\n  cashier_info: faker.finance.mask(16, false, false),\n  item_name: faker.random.arrayElement(['normal', 'turbo']),\n  item_category: faker.random.arrayElement(['normal', 'turbo']),\n  offer: faker.finance.mask(16, false, false),\n  item_number: faker.finance.mask(16, false, false),\n  sku: faker.finance.mask(16, false, false),\n  transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n  number_of_items: faker.finance.mask(16, false, false),\n  date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_barcode: faker.finance.mask(16, false, false),\n  receipt_number: faker.finance.mask(16, false, false),\n  tax_amount: faker.finance.amount(1, 2500, 2),\n  tax_percentage: faker.finance.amount(1, 2500, 2),\n  sub_total: faker.finance.amount(1, 2500, 2),\n  total: faker.finance.amount(1, 2500, 2),\n  card_type: faker.random.arrayElement(['normal', 'turbo']),\n  last_four_digits: faker.finance.mask(16, false, false),\n  chip_read: faker.random.boolean(),\n  loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n  authorization_number: faker.finance.mask(16, false, false),\n  aid_code: faker.finance.mask(16, false, false),\n  vcd_number: faker.finance.mask(16, false, false),\n  consumer: faker.finance.mask(16, false, false),\n  status: faker.random.arrayElement(['planned', 'done']),\n  reference: faker.lorem.words(3).substring(0, 20)\n}, {\n  type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n  payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n  merchant_id: faker.finance.mask(16, false, false),\n  mercant_address: faker.random.arrayElement(['normal', 'turbo']),\n  coupon_barcode: faker.finance.mask(16, false, false),\n  register_terminal_id: faker.finance.mask(16, false, false),\n  cashier_info: faker.finance.mask(16, false, false),\n  item_name: faker.random.arrayElement(['normal', 'turbo']),\n  item_category: faker.random.arrayElement(['normal', 'turbo']),\n  offer: faker.finance.mask(16, false, false),\n  item_number: faker.finance.mask(16, false, false),\n  sku: faker.finance.mask(16, false, false),\n  transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n  number_of_items: faker.finance.mask(16, false, false),\n  date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_barcode: faker.finance.mask(16, false, false),\n  receipt_number: faker.finance.mask(16, false, false),\n  tax_amount: faker.finance.amount(1, 2500, 2),\n  tax_percentage: faker.finance.amount(1, 2500, 2),\n  sub_total: faker.finance.amount(1, 2500, 2),\n  total: faker.finance.amount(1, 2500, 2),\n  card_type: faker.random.arrayElement(['normal', 'turbo']),\n  last_four_digits: faker.finance.mask(16, false, false),\n  chip_read: faker.random.boolean(),\n  loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n  authorization_number: faker.finance.mask(16, false, false),\n  aid_code: faker.finance.mask(16, false, false),\n  vcd_number: faker.finance.mask(16, false, false),\n  consumer: faker.finance.mask(16, false, false),\n  status: faker.random.arrayElement(['planned', 'done']),\n  reference: faker.lorem.words(3).substring(0, 20)\n}, {\n  type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n  payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n  merchant_id: faker.finance.mask(16, false, false),\n  mercant_address: faker.random.arrayElement(['normal', 'turbo']),\n  coupon_barcode: faker.finance.mask(16, false, false),\n  register_terminal_id: faker.finance.mask(16, false, false),\n  cashier_info: faker.finance.mask(16, false, false),\n  item_name: faker.random.arrayElement(['normal', 'turbo']),\n  item_category: faker.random.arrayElement(['normal', 'turbo']),\n  offer: faker.finance.mask(16, false, false),\n  item_number: faker.finance.mask(16, false, false),\n  sku: faker.finance.mask(16, false, false),\n  transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n  number_of_items: faker.finance.mask(16, false, false),\n  date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_barcode: faker.finance.mask(16, false, false),\n  receipt_number: faker.finance.mask(16, false, false),\n  tax_amount: faker.finance.amount(1, 2500, 2),\n  tax_percentage: faker.finance.amount(1, 2500, 2),\n  sub_total: faker.finance.amount(1, 2500, 2),\n  total: faker.finance.amount(1, 2500, 2),\n  card_type: faker.random.arrayElement(['normal', 'turbo']),\n  last_four_digits: faker.finance.mask(16, false, false),\n  chip_read: faker.random.boolean(),\n  loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n  authorization_number: faker.finance.mask(16, false, false),\n  aid_code: faker.finance.mask(16, false, false),\n  vcd_number: faker.finance.mask(16, false, false),\n  consumer: faker.finance.mask(16, false, false),\n  status: faker.random.arrayElement(['planned', 'done']),\n  reference: faker.lorem.words(3).substring(0, 20)\n}, {\n  type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n  payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n  merchant_id: faker.finance.mask(16, false, false),\n  mercant_address: faker.random.arrayElement(['normal', 'turbo']),\n  coupon_barcode: faker.finance.mask(16, false, false),\n  register_terminal_id: faker.finance.mask(16, false, false),\n  cashier_info: faker.finance.mask(16, false, false),\n  item_name: faker.random.arrayElement(['normal', 'turbo']),\n  item_category: faker.random.arrayElement(['normal', 'turbo']),\n  offer: faker.finance.mask(16, false, false),\n  item_number: faker.finance.mask(16, false, false),\n  sku: faker.finance.mask(16, false, false),\n  transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n  number_of_items: faker.finance.mask(16, false, false),\n  date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n  receipt_barcode: faker.finance.mask(16, false, false),\n  receipt_number: faker.finance.mask(16, false, false),\n  tax_amount: faker.finance.amount(1, 2500, 2),\n  tax_percentage: faker.finance.amount(1, 2500, 2),\n  sub_total: faker.finance.amount(1, 2500, 2),\n  total: faker.finance.amount(1, 2500, 2),\n  card_type: faker.random.arrayElement(['normal', 'turbo']),\n  last_four_digits: faker.finance.mask(16, false, false),\n  chip_read: faker.random.boolean(),\n  loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n  authorization_number: faker.finance.mask(16, false, false),\n  aid_code: faker.finance.mask(16, false, false),\n  vcd_number: faker.finance.mask(16, false, false),\n  consumer: faker.finance.mask(16, false, false),\n  status: faker.random.arrayElement(['planned', 'done']),\n  reference: faker.lorem.words(3).substring(0, 20)\n}]; //  // Messages\n//  const createMessage = user => {\n//     const message = new Message({\n//        title: faker.lorem.words(5),\n//        sentDate: faker.date.between('2020-01-01', '2020-12-31'),\n//        recipient: user._id,\n//        content: faker.lorem.paragraph(),\n//        isRead: faker.random.boolean()\n//     });\n//     return message.save();\n//  };\n//  // Statistics\n//  const createStats = accountId => {\n//     const stats = new Stat({\n//        accountId,\n//        name: faker.date.recent(_.random(1, 60, false)),\n//        // Date is NOW or 1-60 days before\n//        date: faker.date.recent(_.random(1, 60, false)),\n//        income: faker.finance.amount(100, 5000, 2),\n//        expenses: faker.finance.amount(100, 5000, 2)\n//     });\n//     return stats.save();\n//  };","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/Utils/Dummydata.js"],"names":["faker","require","myPadStart","el","targetLength","padString","toString","padStart","chunker","step","string","regExp","RegExp","match","join","cards","id","isActive","random","boolean","number","finance","mask","expiresMonth","min","max","expiresYear","receipts","type","arrayElement","payeeName","name","firstName","lastName","merchant_id","mercant_address","coupon_barcode","register_terminal_id","cashier_info","item_name","item_category","offer","item_number","sku","transaction_type","number_of_items","date","between","receipt_expiration_date","receipt_barcode","receipt_number","tax_amount","amount","tax_percentage","sub_total","total","card_type","last_four_digits","chip_read","loyalty_rewards_member_id","authorization_number","aid_code","vcd_number","consumer","status","reference","lorem","words","substring"],"mappings":"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","sourcesContent":["const faker = require('faker');\n\n\n// Add padding from the start of the current string/number\nexport const myPadStart = (el, targetLength, padString) => {\n    return el.toString().padStart(targetLength, padString);\n };\n \n // Insert something after every n characters in the string\n export const chunker = (el, step, string) => {\n    const regExp = new RegExp(`.{${step}}`, 'g');\n    return el\n       .toString()\n       .match(regExp)\n       .join(string);\n };\n\n\n\n// export const defaultUserData = {\n//     email: faker.internet.email(),\n//     password: 'admin123',\n//     firstName: 'John',\n//     lastName: 'Tsiros',\n//     dateOfBirth: faker.date.between('1960-01-01', '2000-12-31'),\n//     phone: faker.phone.phoneNumberFormat(1),\n//     picture: faker.internet.avatar(),\n//     streetAddr: faker.address.streetAddress(),\n//     postcode: faker.address.zipCode(),\n//     city: faker.address.city()\n//  };\n \n//  const createUser = () => {\n//     const user = new User({ ...defaultUserData });\n \n//     return user.save();\n//  };\n \n//  const createControlledUser = () => {\n//     const user = new User({\n//        ...defaultUserData,\n//        email: 'email@example.com'\n//     });\n \n//     return user.save();\n//  };\n \n//  // Accounts\n//  const createAccount = user => {\n//     const account = new Account({\n//        type: faker.random.arrayElement(['credit', 'debit']),\n//        owner: user._id,\n//        isActive: faker.random.boolean(),\n//        sortcode: faker.finance.mask(6, false, false),\n//        number: faker.finance.mask(8, false, false),\n//        currency: faker.finance.currencyCode(),\n//        balance: faker.finance.amount(1, 10000, 2)\n//     });\n \n//     return account.save();\n//  };\n \n // Cards\n    export const cards =  [\n        {\n            id: 1,\n            isActive: faker.random.boolean(),\n            number: faker.finance.mask(16, false, false),\n            expiresMonth: faker.random.number({ min: 1, max: 12 }),\n            expiresYear: faker.random.number({ min: 2020, max: 2030 }),\n         },\n         {\n            id: 2,\n            isActive: faker.random.boolean(),\n            number: faker.finance.mask(16, false, false),\n            expiresMonth: faker.random.number({ min: 1, max: 12 }),\n            expiresYear: faker.random.number({ min: 2020, max: 2030 }),\n         },\n\n    ]\n\n \n // Receipts\n \n    export const receipts = [\n        {\n       type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n       payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n       merchant_id: faker.finance.mask(16, false, false),\n       mercant_address: faker.random.arrayElement(['normal', 'turbo']),\n       coupon_barcode: faker.finance.mask(16, false, false),\n       register_terminal_id: faker.finance.mask(16, false, false),\n       cashier_info: faker.finance.mask(16, false, false),\n       item_name: faker.random.arrayElement(['normal', 'turbo']),\n       item_category: faker.random.arrayElement(['normal', 'turbo']),\n       offer:faker.finance.mask(16, false, false),\n       item_number: faker.finance.mask(16, false, false),\n       sku: faker.finance.mask(16, false, false),\n       transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n       number_of_items: faker.finance.mask(16, false, false),\n       date: faker.date.between('2020-01-01', '2020-12-31'),\n       receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n       receipt_barcode: faker.finance.mask(16, false, false),\n       receipt_number: faker.finance.mask(16, false, false),\n       tax_amount: faker.finance.amount(1, 2500, 2),\n       tax_percentage: faker.finance.amount(1, 2500, 2),\n       sub_total: faker.finance.amount(1, 2500, 2),\n       total: faker.finance.amount(1, 2500, 2),\n       card_type: faker.random.arrayElement(['normal', 'turbo']),\n       last_four_digits: faker.finance.mask(16, false, false),\n       chip_read: faker.random.boolean(),\n       loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n       authorization_number: faker.finance.mask(16, false, false),\n       aid_code: faker.finance.mask(16, false, false),\n       vcd_number: faker.finance.mask(16, false, false),\n       consumer: faker.finance.mask(16, false, false),\n       status: faker.random.arrayElement(['planned', 'done']),\n       reference: faker.lorem.words(3).substring(0, 20),\n    },\n    {\n        type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n        payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n        merchant_id: faker.finance.mask(16, false, false),\n        mercant_address: faker.random.arrayElement(['normal', 'turbo']),\n        coupon_barcode: faker.finance.mask(16, false, false),\n        register_terminal_id: faker.finance.mask(16, false, false),\n        cashier_info: faker.finance.mask(16, false, false),\n        item_name: faker.random.arrayElement(['normal', 'turbo']),\n        item_category: faker.random.arrayElement(['normal', 'turbo']),\n        offer:faker.finance.mask(16, false, false),\n        item_number: faker.finance.mask(16, false, false),\n        sku: faker.finance.mask(16, false, false),\n        transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n        number_of_items: faker.finance.mask(16, false, false),\n        date: faker.date.between('2020-01-01', '2020-12-31'),\n        receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n        receipt_barcode: faker.finance.mask(16, false, false),\n        receipt_number: faker.finance.mask(16, false, false),\n        tax_amount: faker.finance.amount(1, 2500, 2),\n        tax_percentage: faker.finance.amount(1, 2500, 2),\n        sub_total: faker.finance.amount(1, 2500, 2),\n        total: faker.finance.amount(1, 2500, 2),\n        card_type: faker.random.arrayElement(['normal', 'turbo']),\n        last_four_digits: faker.finance.mask(16, false, false),\n        chip_read: faker.random.boolean(),\n        loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n        authorization_number: faker.finance.mask(16, false, false),\n        aid_code: faker.finance.mask(16, false, false),\n        vcd_number: faker.finance.mask(16, false, false),\n        consumer: faker.finance.mask(16, false, false),\n        status: faker.random.arrayElement(['planned', 'done']),\n        reference: faker.lorem.words(3).substring(0, 20),\n     },\n     {\n        type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n        payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n        merchant_id: faker.finance.mask(16, false, false),\n        mercant_address: faker.random.arrayElement(['normal', 'turbo']),\n        coupon_barcode: faker.finance.mask(16, false, false),\n        register_terminal_id: faker.finance.mask(16, false, false),\n        cashier_info: faker.finance.mask(16, false, false),\n        item_name: faker.random.arrayElement(['normal', 'turbo']),\n        item_category: faker.random.arrayElement(['normal', 'turbo']),\n        offer:faker.finance.mask(16, false, false),\n        item_number: faker.finance.mask(16, false, false),\n        sku: faker.finance.mask(16, false, false),\n        transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n        number_of_items: faker.finance.mask(16, false, false),\n        date: faker.date.between('2020-01-01', '2020-12-31'),\n        receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n        receipt_barcode: faker.finance.mask(16, false, false),\n        receipt_number: faker.finance.mask(16, false, false),\n        tax_amount: faker.finance.amount(1, 2500, 2),\n        tax_percentage: faker.finance.amount(1, 2500, 2),\n        sub_total: faker.finance.amount(1, 2500, 2),\n        total: faker.finance.amount(1, 2500, 2),\n        card_type: faker.random.arrayElement(['normal', 'turbo']),\n        last_four_digits: faker.finance.mask(16, false, false),\n        chip_read: faker.random.boolean(),\n        loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n        authorization_number: faker.finance.mask(16, false, false),\n        aid_code: faker.finance.mask(16, false, false),\n        vcd_number: faker.finance.mask(16, false, false),\n        consumer: faker.finance.mask(16, false, false),\n        status: faker.random.arrayElement(['planned', 'done']),\n        reference: faker.lorem.words(3).substring(0, 20),\n     },\n     {\n        type: faker.random.arrayElement(['Amazon', 'Target', 'Popeyes']),\n        payeeName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n        merchant_id: faker.finance.mask(16, false, false),\n        mercant_address: faker.random.arrayElement(['normal', 'turbo']),\n        coupon_barcode: faker.finance.mask(16, false, false),\n        register_terminal_id: faker.finance.mask(16, false, false),\n        cashier_info: faker.finance.mask(16, false, false),\n        item_name: faker.random.arrayElement(['normal', 'turbo']),\n        item_category: faker.random.arrayElement(['normal', 'turbo']),\n        offer:faker.finance.mask(16, false, false),\n        item_number: faker.finance.mask(16, false, false),\n        sku: faker.finance.mask(16, false, false),\n        transaction_type: faker.random.arrayElement(['normal', 'turbo']),\n        number_of_items: faker.finance.mask(16, false, false),\n        date: faker.date.between('2020-01-01', '2020-12-31'),\n        receipt_expiration_date: faker.date.between('2020-01-01', '2020-12-31'),\n        receipt_barcode: faker.finance.mask(16, false, false),\n        receipt_number: faker.finance.mask(16, false, false),\n        tax_amount: faker.finance.amount(1, 2500, 2),\n        tax_percentage: faker.finance.amount(1, 2500, 2),\n        sub_total: faker.finance.amount(1, 2500, 2),\n        total: faker.finance.amount(1, 2500, 2),\n        card_type: faker.random.arrayElement(['normal', 'turbo']),\n        last_four_digits: faker.finance.mask(16, false, false),\n        chip_read: faker.random.boolean(),\n        loyalty_rewards_member_id: faker.finance.mask(16, false, false),\n        authorization_number: faker.finance.mask(16, false, false),\n        aid_code: faker.finance.mask(16, false, false),\n        vcd_number: faker.finance.mask(16, false, false),\n        consumer: faker.finance.mask(16, false, false),\n        status: faker.random.arrayElement(['planned', 'done']),\n        reference: faker.lorem.words(3).substring(0, 20),\n     }\n];\n \n \n//  // Messages\n//  const createMessage = user => {\n//     const message = new Message({\n//        title: faker.lorem.words(5),\n//        sentDate: faker.date.between('2020-01-01', '2020-12-31'),\n//        recipient: user._id,\n//        content: faker.lorem.paragraph(),\n//        isRead: faker.random.boolean()\n//     });\n \n//     return message.save();\n//  };\n \n//  // Statistics\n//  const createStats = accountId => {\n//     const stats = new Stat({\n//        accountId,\n//        name: faker.date.recent(_.random(1, 60, false)),\n//        // Date is NOW or 1-60 days before\n//        date: faker.date.recent(_.random(1, 60, false)),\n//        income: faker.finance.amount(100, 5000, 2),\n//        expenses: faker.finance.amount(100, 5000, 2)\n//     });\n \n//     return stats.save();\n//  };"]},"metadata":{},"sourceType":"module"}