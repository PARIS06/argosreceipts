{"ast":null,"code":"var _jsxFileName = \"/Users/moabdo-business/Desktop/argoswebapp/web/src/Components/Authorization/Register/Form.js\";\nimport React from 'react';\nimport { Form, Formik, Field, withFormik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport SingleModuleButton from '../../../Components/UI/Buttons/SingleModuleButton'; // const InnerForm = props => {\n//    const { errors, touched } = props;\n//    return (\n//       <Form className=\"register-form\">\n//          <div>\n//          <div className=\"form-group\">\n//                <Field\n//                   type=\"email\"\n//                   className=\"form-control login-input\"\n//                   name=\"email\"\n//                   placeholder=\"Enter a valid email...\"\n//                />\n//                {touched.email && errors.email && <p className=\"field-invalid\">{errors.email}</p>}\n//             </div>\n//             <div className=\"form-group\">\n//                <Field\n//                   type=\"password\"\n//                   className=\"form-control password-input\"\n//                   name=\"password\"\n//                   placeholder=\"Set a password...\"\n//                />\n//                {touched.password && errors.password && (\n//                   <p className=\"field-invalid\">{errors.password}</p>\n//                )}\n//             </div>\n//             <div className=\"form-group\">\n//                <Field\n//                   as=\"select\"\n//                   className=\"form-control\"\n//                   name=\"user_type\"\n//                   placeholder=\"Select account type\"\n//                >\n//                   <option value=\"0\">Consumer</option>\n//                   <option value=\"1\">Merchant</option>\n//                </Field>\n//                {touched.password && errors.password && (\n//                   <p className=\"field-invalid\">{errors.password}</p>\n//                )}\n//             </div>\n//             <p>\n//                <Link to=\"/login\">Already have an account?</Link>\n//             </p>\n//          </div>\n//          <SingleModuleButton text=\"Create your account\" type=\"submit\" />\n//       </Form>\n//    );\n// };\n\nconst InnerForm = () => {\n  return React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      user_type: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur\n  }) => React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, JSON.stringify.arguments, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Enter your name\",\n    className: \"form-control\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))));\n}; // Wrap our form with the using withFormik HoC\n\n\nconst RegisterForm = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: props => ({\n    email: '',\n    password: '',\n    user_type: ''\n  }),\n  // Add a custom validation function (this can be async too!)\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required('Email is required').email('This is not a valid email'),\n    password: Yup.string().required('Password is required').min(6, 'Your password has to be at least 6 characters')\n  }),\n  // Submission handler\n  handleSubmit: (values, {\n    props,\n    setStatus\n  }) => {\n    props.onRegisterSubmit(values.email, values.password, values.user_type);\n  }\n})(InnerForm);\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/moabdo-business/Desktop/argoswebapp/web/src/Components/Authorization/Register/Form.js"],"names":["React","Form","Formik","Field","withFormik","Link","Yup","SingleModuleButton","InnerForm","name","email","password","user_type","values","errors","touched","handleChange","handleBlur","JSON","stringify","arguments","RegisterForm","mapPropsToValues","props","validationSchema","object","shape","string","required","min","handleSubmit","setStatus","onRegisterSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,UAA9B,QAAgD,QAAhD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,kBAAP,MAA+B,mDAA/B,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACrB,SACG,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAE;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,KAAK,EAAE,EAAnB;AAAuBC,MAAAA,QAAQ,EAAE,EAAjC;AAAqCC,MAAAA,SAAS,EAAE;AAAhD,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,CAAC;AAACC,IAAAA,MAAD;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA,YAA1B;AAAwCC,IAAAA;AAAxC,GAAD,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,IAAI,CAACC,SAAL,CAAeC,SADnB,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,WAAW,EAAC,iBAHZ;AAIA,IAAA,SAAS,EAAC,cAJV;AAKA,IAAA,QAAQ,EAAEJ,YALV;AAMA,IAAA,MAAM,EAAEC,UANR;AAOA,IAAA,KAAK,EAAEJ,MAAM,CAACJ,IAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFF,CAHN,CADH;AAsBF,CAvBD,C,CAyBA;;;AACA,MAAMY,YAAY,GAAGjB,UAAU,CAAC;AAC7B;AACAkB,EAAAA,gBAAgB,EAAEC,KAAK,KAAK;AAAEb,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE,EAAvB;AAA2BC,IAAAA,SAAS,EAAE;AAAtC,GAAL,CAFM;AAI7B;AACAY,EAAAA,gBAAgB,EAAElB,GAAG,CAACmB,MAAJ,GAAaC,KAAb,CAAmB;AAClChB,IAAAA,KAAK,EAAEJ,GAAG,CAACqB,MAAJ,GACHC,QADG,CACM,mBADN,EAEHlB,KAFG,CAEG,2BAFH,CAD2B;AAIlCC,IAAAA,QAAQ,EAAEL,GAAG,CAACqB,MAAJ,GACNC,QADM,CACG,sBADH,EAENC,GAFM,CAEF,CAFE,EAEC,+CAFD;AAJwB,GAAnB,CALW;AAc7B;AACAC,EAAAA,YAAY,EAAE,CAACjB,MAAD,EAAS;AAAEU,IAAAA,KAAF;AAASQ,IAAAA;AAAT,GAAT,KAAkC;AAC7CR,IAAAA,KAAK,CAACS,gBAAN,CAAuBnB,MAAM,CAACH,KAA9B,EAAqCG,MAAM,CAACF,QAA5C,EAAsDE,MAAM,CAACD,SAA7D;AACF;AAjB4B,CAAD,CAAV,CAkBlBJ,SAlBkB,CAArB;AAoBA,eAAea,YAAf","sourcesContent":["import React from 'react';\nimport { Form, Formik, Field, withFormik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport SingleModuleButton from '../../../Components/UI/Buttons/SingleModuleButton';\n\n// const InnerForm = props => {\n//    const { errors, touched } = props;\n\n//    return (\n//       <Form className=\"register-form\">\n//          <div>\n//          <div className=\"form-group\">\n//                <Field\n//                   type=\"email\"\n//                   className=\"form-control login-input\"\n//                   name=\"email\"\n//                   placeholder=\"Enter a valid email...\"\n//                />\n//                {touched.email && errors.email && <p className=\"field-invalid\">{errors.email}</p>}\n//             </div>\n\n//             <div className=\"form-group\">\n//                <Field\n//                   type=\"password\"\n//                   className=\"form-control password-input\"\n//                   name=\"password\"\n//                   placeholder=\"Set a password...\"\n//                />\n//                {touched.password && errors.password && (\n//                   <p className=\"field-invalid\">{errors.password}</p>\n//                )}\n//             </div>\n//             <div className=\"form-group\">\n//                <Field\n//                   as=\"select\"\n//                   className=\"form-control\"\n//                   name=\"user_type\"\n//                   placeholder=\"Select account type\"\n//                >\n//                   <option value=\"0\">Consumer</option>\n//                   <option value=\"1\">Merchant</option>\n//                </Field>\n//                {touched.password && errors.password && (\n//                   <p className=\"field-invalid\">{errors.password}</p>\n//                )}\n//             </div>\n//             <p>\n//                <Link to=\"/login\">Already have an account?</Link>\n//             </p>\n//          </div>\n\n//          <SingleModuleButton text=\"Create your account\" type=\"submit\" />\n//       </Form>\n//    );\n// };\n\nconst InnerForm = () => {\n   return (\n      <Formik initialValues={{ name: '', email: '', password: '', user_type: 0 }}>\n         {({values, errors, touched, handleChange, handleBlur}) => (\n            \n            <form>\n               {JSON.stringify.arguments}\n              <div className=\"form-group\">\n                 <input \n                 type=\"text\"\n                 name=\"name\"\n                 placeholder=\"Enter your name\"\n                 className=\"form-control\"\n                 onChange={handleChange}\n                 onBlur={handleBlur}\n                 value={values.name}\n                 />\n              </div>\n           </form>\n         )}\n       \n      </Formik>\n   )\n}\n\n// Wrap our form with the using withFormik HoC\nconst RegisterForm = withFormik({\n   // Transform outer props into form values\n   mapPropsToValues: props => ({ email: '', password: '', user_type: '' }),\n\n   // Add a custom validation function (this can be async too!)\n   validationSchema: Yup.object().shape({\n      email: Yup.string()\n         .required('Email is required')\n         .email('This is not a valid email'),\n      password: Yup.string()\n         .required('Password is required')\n         .min(6, 'Your password has to be at least 6 characters')\n   }),\n\n   // Submission handler\n   handleSubmit: (values, { props, setStatus }) => {\n      props.onRegisterSubmit(values.email, values.password, values.user_type);\n   }\n})(InnerForm);\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}